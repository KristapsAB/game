{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\OneDrive\\\\Desktop\\\\windows-game-main\\\\windows-game-main\\\\src\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google'; // Import GoogleLogin component\nimport './style/styles.css'; // Adjust the file path based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginStatus, setLoginStatus] = useState(null);\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost/game/login.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        }),\n        credentials: 'omit'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      if (result.success) {\n        console.log('Login successful');\n\n        // Save user data in localStorage upon successful login\n        localStorage.setItem('loggedInUser', JSON.stringify({\n          id: result.userData.id,\n          username: result.userData.username,\n          email: result.userData.email\n        }));\n\n        // Save user ID in sessionStorage\n        sessionStorage.setItem('userId', result.userData.id);\n        localStorage.setItem('isLoggedIn', 'true');\n\n        // Redirect to the levels page\n        navigate('/levels');\n      } else {\n        console.error('Login failed:', result.message);\n      }\n      setLoginStatus({\n        success: result.success,\n        message: result.message\n      });\n    } catch (error) {\n      console.error('Error:', error);\n      setLoginStatus({\n        success: false,\n        message: 'Error during login. Please try again later.'\n      });\n    }\n  };\n  const handleGoogleLoginSuccess = async credentialResponse => {\n    console.log('Google login successful:', credentialResponse);\n\n    // Extract the credential from the response\n    const {\n      credential\n    } = credentialResponse;\n    try {\n      // Send the credential to your backend to obtain the user ID\n      const response = await fetch('http://localhost/game/getUserId', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          credential\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n\n      // Save the user ID in the database\n      const userId = result.userId;\n\n      // Generate a random username for the user\n      const username = generateRandomUsername();\n\n      // Save the user ID and username in localStorage\n      localStorage.setItem('loggedInUser', JSON.stringify({\n        id: userId,\n        username: username,\n        email: result.email\n      }));\n\n      // Redirect to the levels page\n      navigate('/levels');\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle the error\n    }\n  };\n  const handleGoogleLoginError = () => {\n    console.error('Google login failed');\n    // You can handle the Google login failure here\n  };\n  const handleRegister = () => {\n    // Redirect to the registration page\n    navigate('/register');\n  };\n\n  // Retrieve user data from localStorage upon component mount\n  useEffect(() => {\n    const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\n    if (loggedInUser) {\n      // Do something with the user data if needed\n      console.log('Logged in user:', loggedInUser);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: handleEmailChange,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: handlePasswordChange,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"301743701977-0jo8mmnfhqigsk8i1bpti9m6vv50rvgt.apps.googleusercontent.com\" // Replace with your Google OAuth client ID\n          ,\n          onSuccess: handleGoogleLoginSuccess,\n          onError: handleGoogleLoginError,\n          children: \"Login with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), loginStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `login-message ${loginStatus.success ? 'success' : 'error'}`,\n      children: loginStatus.success ? 'Login successful' : loginStatus.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-link\",\n      children: [\"Not a user? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        onClick: handleRegister,\n        children: \"Register now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"VYFgJLUMSGeXXWjPQmmI1WvvolA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","GoogleLogin","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","loginStatus","setLoginStatus","handleEmailChange","e","target","value","handlePasswordChange","handleLogin","response","fetch","method","headers","body","JSON","stringify","credentials","ok","Error","status","result","json","success","console","log","localStorage","setItem","id","userData","username","sessionStorage","error","message","handleGoogleLoginSuccess","credentialResponse","credential","userId","generateRandomUsername","handleGoogleLoginError","handleRegister","loggedInUser","parse","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","clientId","onSuccess","onError","href","_c","$RefreshReg$"],"sources":["C:/Users/krist/OneDrive/Desktop/windows-game-main/windows-game-main/src/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google'; // Import GoogleLogin component\nimport './style/styles.css'; // Adjust the file path based on your project structure\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginStatus, setLoginStatus] = useState(null);\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost/game/login.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n        credentials: 'omit',\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const result = await response.json();\n\n      if (result.success) {\n        console.log('Login successful');\n\n        // Save user data in localStorage upon successful login\n        localStorage.setItem('loggedInUser', JSON.stringify({\n          id: result.userData.id,\n          username: result.userData.username,\n          email: result.userData.email,\n        }));\n\n        // Save user ID in sessionStorage\n        sessionStorage.setItem('userId', result.userData.id);\n\n        localStorage.setItem('isLoggedIn', 'true');\n\n        // Redirect to the levels page\n        navigate('/levels');\n      } else {\n        console.error('Login failed:', result.message);\n      }\n\n      setLoginStatus({\n        success: result.success,\n        message: result.message,\n      });\n    } catch (error) {\n      console.error('Error:', error);\n\n      setLoginStatus({\n        success: false,\n        message: 'Error during login. Please try again later.',\n      });\n    }\n  };\n\n  const handleGoogleLoginSuccess = async (credentialResponse) => {\n    console.log('Google login successful:', credentialResponse);\n    \n    // Extract the credential from the response\n    const { credential } = credentialResponse;\n  \n    try {\n      // Send the credential to your backend to obtain the user ID\n      const response = await fetch('http://localhost/game/getUserId', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ credential }),\n      });\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n  \n      const result = await response.json();\n  \n      // Save the user ID in the database\n      const userId = result.userId;\n  \n      // Generate a random username for the user\n      const username = generateRandomUsername();\n  \n      // Save the user ID and username in localStorage\n      localStorage.setItem('loggedInUser', JSON.stringify({\n        id: userId,\n        username: username,\n        email: result.email,\n      }));\n  \n      // Redirect to the levels page\n      navigate('/levels');\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle the error\n    }\n  };\n  \n  \n  const handleGoogleLoginError = () => {\n    console.error('Google login failed');\n    // You can handle the Google login failure here\n  };\n\n  const handleRegister = () => {\n    // Redirect to the registration page\n    navigate('/register');\n  };\n\n  // Retrieve user data from localStorage upon component mount\n  useEffect(() => {\n    const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\n    if (loggedInUser) {\n      // Do something with the user data if needed\n      console.log('Logged in user:', loggedInUser);\n    }\n  }, []);\n\n  return (\n    <div className=\"login-main\">\n      <h2>Login</h2>\n      <form>\n        <input type=\"email\" value={email} onChange={handleEmailChange} placeholder=\"Email\" />\n        <br />\n        <input type=\"password\" value={password} onChange={handlePasswordChange} placeholder=\"Password\" />\n        <br />\n        <div className=\"button\">\n          <button type=\"button\" onClick={handleLogin}>\n            Login\n          </button>\n          <GoogleLogin\n            clientId=\"301743701977-0jo8mmnfhqigsk8i1bpti9m6vv50rvgt.apps.googleusercontent.com\" // Replace with your Google OAuth client ID\n            onSuccess={handleGoogleLoginSuccess}\n            onError={handleGoogleLoginError}\n          >\n            Login with Google\n          </GoogleLogin>\n        </div>\n      </form>\n\n      {loginStatus && (\n        <div className={`login-message ${loginStatus.success ? 'success' : 'error'}`}>\n          {loginStatus.success\n            ? 'Login successful'\n            : loginStatus.message}\n        </div>\n      )}\n\n      <div className=\"register-link\">\n        Not a user? <a href=\"/register\" onClick={handleRegister}>Register now</a>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}