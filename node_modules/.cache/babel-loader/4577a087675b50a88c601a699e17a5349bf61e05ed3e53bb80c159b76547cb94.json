{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/guess-game/guess/windows-game/src/Level.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './style/level.css'; // Import your CSS file\nimport Clock from './levelIcon/hourglass(1).png';\nimport Poker from './levelIcon/poker.png';\nimport Coin from './levelIcon/coin.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Levels = ({\n  levels\n}) => {\n  _s();\n  const [bestScores, setBestScores] = useState({});\n  useEffect(() => {\n    // Fetch best scores for each level when the component mounts\n    const fetchBestScores = async () => {\n      try {\n        const userId = sessionStorage.getItem('userId');\n        const response = await fetch(`http://localhost:8888/game/getBestScores.php?userId=${userId}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setBestScores(data);\n      } catch (error) {\n        console.error('Error fetching best scores:', error);\n      }\n    };\n    fetchBestScores();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"levels-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-grid\",\n      children: levels.map((level, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/level/${index + 1}`,\n        state: {\n          ...level,\n          numberOfCards: level.cardsCount\n        },\n        className: \"level-card\" // Wrap the entire card\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Level \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: Poker,\n              alt: \"Poker icon\",\n              style: {\n                width: \"20px\",\n                height: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), \"\\xA0 \", level.cardsCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: Clock,\n              alt: \"Clock icon\",\n              style: {\n                width: \"20px\",\n                height: \"20px\",\n                color: \"#ffffff\"\n              } // Adjust styles as needed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), \"\\xA0 \", level.gameDuration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: Coin,\n              alt: \"Coin icon\",\n              style: {\n                width: \"20px\",\n                height: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), \" \", \"\\xA0 \", level.reward]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Best Score: \", bestScores[level.level] || 'N/A', \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Levels, \"5uBJLaQJp1wB/F1N9fyFryl0yAQ=\");\n_c = Levels;\nexport default Levels;\nvar _c;\n$RefreshReg$(_c, \"Levels\");","map":{"version":3,"names":["React","useState","useEffect","Link","Clock","Poker","Coin","jsxDEV","_jsxDEV","Levels","levels","_s","bestScores","setBestScores","fetchBestScores","userId","sessionStorage","getItem","response","fetch","ok","Error","status","data","json","error","console","className","children","map","level","index","to","state","numberOfCards","cardsCount","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","color","gameDuration","reward","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/guess-game/guess/windows-game/src/Level.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './style/level.css'; // Import your CSS file\nimport Clock from './levelIcon/hourglass(1).png';\nimport Poker from './levelIcon/poker.png';\nimport Coin from './levelIcon/coin.png';\n\nconst Levels = ({ levels }) => {\n  const [bestScores, setBestScores] = useState({});\n\n  useEffect(() => {\n    // Fetch best scores for each level when the component mounts\n    const fetchBestScores = async () => {\n      try {\n        const userId = sessionStorage.getItem('userId');\n        const response = await fetch(`http://localhost:8888/game/getBestScores.php?userId=${userId}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setBestScores(data);\n      } catch (error) {\n        console.error('Error fetching best scores:', error);\n      }\n    };\n\n    fetchBestScores();\n  }, []);\n\n  return (\n    <div className=\"levels-container\">\n      <div className=\"level-grid\">\n        {levels.map((level, index) => (\n          <Link\n            key={index}\n            to={`/level/${index + 1}`}\n            state={{ ...level, numberOfCards: level.cardsCount }}\n            className=\"level-card\" // Wrap the entire card\n          >\n            <div className=\"level-header\">\n              <h2>Level {index + 1}</h2>\n              <p>\n                <img src={Poker} alt=\"Poker icon\" style={{ width: \"20px\", height: \"20px\" }} />\n                &nbsp; {level.cardsCount}\n              </p>\n            </div>\n            <div className=\"level-body\">\n              <p>\n                <img\n                  src={Clock}\n                  alt=\"Clock icon\"\n                  style={{ width: \"20px\", height: \"20px\", color: \"#ffffff\" }} // Adjust styles as needed\n                />\n                &nbsp; {level.gameDuration}\n              </p>\n              <p>\n                <img src={Coin} alt=\"Coin icon\" style={{ width: \"20px\", height: \"20px\" }} /> {/* Added coin icon */}\n                &nbsp; {level.reward}\n              </p>\n              <p>\n                Best Score: {bestScores[level.level] || 'N/A'} {/* Display best score or 'N/A' if not available */}\n              </p>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Levels;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}