{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/gameFinishedProduct-main/src/Register.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './style/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [registrationStatus, setRegistrationStatus] = useState(null);\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handleUsernameChange = e => {\n    setUsername(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const isEmailValid = email => {\n    // Use a simple regex to check for email validity\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const isUsernameValid = username => {\n    // Use a regex to check if the username contains only Latin alphabet characters\n    const latinAlphabetRegex = /^[a-zA-Z]+$/;\n    return latinAlphabetRegex.test(username) && !/[!@#$%^&*(),.?\":{}|<>]/g.test(username);\n  };\n  const handleRegister = async () => {\n    try {\n      // Validation checks\n      if (!isEmailValid(email)) {\n        setRegistrationStatus({\n          success: false,\n          message: 'Invalid email format. Please enter a valid email address.'\n        });\n        return;\n      }\n      if (!isUsernameValid(username)) {\n        setRegistrationStatus({\n          success: false,\n          message: 'Invalid username. Please use only Latin alphabet characters with no special characters.'\n        });\n        return;\n      }\n      if (password.length < 7) {\n        setRegistrationStatus({\n          success: false,\n          message: 'Password must be at least 7 characters long.'\n        });\n        return;\n      }\n      const response = await fetch('http://localhost:8888/game/register.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          username,\n          password\n        }),\n        credentials: 'omit'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      setRegistrationStatus({\n        success: result.success,\n        message: result.message\n      });\n    } catch (error) {\n      console.error('Error:', error);\n      setRegistrationStatus({\n        success: false,\n        message: 'Error during registration. Please try again later.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: handleUsernameChange,\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: handleEmailChange,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: handlePasswordChange,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleRegister,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), registrationStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `registration-message ${registrationStatus.success ? 'success' : 'error'}`,\n      children: registrationStatus.success ? 'User registered successfully' : registrationStatus.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-link\",\n      children: [\"Already a user? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"vELwgQAHwmPkNiSD1iF7Kbwqa2k=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","Link","useNavigate","jsxDEV","_jsxDEV","Register","_s","email","setEmail","username","setUsername","password","setPassword","registrationStatus","setRegistrationStatus","handleEmailChange","e","target","value","handleUsernameChange","handlePasswordChange","isEmailValid","emailRegex","test","isUsernameValid","latinAlphabetRegex","handleRegister","success","message","length","response","fetch","method","headers","body","JSON","stringify","credentials","ok","Error","status","result","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","to","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/gameFinishedProduct-main/src/Register.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './style/styles.css';\n\n\nconst Register = () => {\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [registrationStatus, setRegistrationStatus] = useState(null);\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const isEmailValid = (email) => {\n    // Use a simple regex to check for email validity\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const isUsernameValid = (username) => {\n    // Use a regex to check if the username contains only Latin alphabet characters\n    const latinAlphabetRegex = /^[a-zA-Z]+$/;\n    return latinAlphabetRegex.test(username) && !/[!@#$%^&*(),.?\":{}|<>]/g.test(username);\n  };\n\n  const handleRegister = async () => {\n    try {\n      // Validation checks\n      if (!isEmailValid(email)) {\n        setRegistrationStatus({\n          success: false,\n          message: 'Invalid email format. Please enter a valid email address.',\n        });\n        return;\n      }\n  \n      if (!isUsernameValid(username)) {\n        setRegistrationStatus({\n          success: false,\n          message: 'Invalid username. Please use only Latin alphabet characters with no special characters.',\n        });\n        return;\n      }\n  \n      if (password.length < 7) {\n        setRegistrationStatus({\n          success: false,\n          message: 'Password must be at least 7 characters long.',\n        });\n        return;\n      }\n  \n      const response = await fetch('http://localhost:8888/game/register.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, username, password }),\n        credentials: 'omit',\n      });\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n  \n      const result = await response.json();\n  \n      setRegistrationStatus({\n        success: result.success,\n        message: result.message,\n      });\n    } catch (error) {\n      console.error('Error:', error);\n  \n      setRegistrationStatus({\n        success: false,\n        message: 'Error during registration. Please try again later.',\n      });\n    }\n  };\n  \n  \n  return (\n    <div className=\"login-main\">\n      <h2>Register</h2>\n      <form>\n        <input type=\"text\" value={username} onChange={handleUsernameChange} placeholder=\"Username\" />\n        <br />\n        <input type=\"email\" value={email} onChange={handleEmailChange} placeholder=\"Email\" />\n        <br />\n        <input type=\"password\" value={password} onChange={handlePasswordChange} placeholder=\"Password\" />\n        <br />\n        <div className=\"button\">\n          <button type=\"button\" onClick={handleRegister}>\n            Register\n          </button>\n        </div>\n      </form>\n  \n      {registrationStatus && (\n        <div className={`registration-message ${registrationStatus.success ? 'success' : 'error'}`}>\n          {registrationStatus.success\n            ? 'User registered successfully'\n            : registrationStatus.message}\n        </div>\n      )}\n\n      <div className=\"login-link\">\n        Already a user? <Link to=\"/login\">Login now</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}