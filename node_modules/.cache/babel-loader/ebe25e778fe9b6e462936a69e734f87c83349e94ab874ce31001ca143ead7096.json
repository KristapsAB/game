{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/gameFinishedProduct-main/src/Profile.js\",\n  _s = $RefreshSig$();\n// Profile.js\n\nimport React, { useState, useEffect } from 'react';\nimport './style/profile.css';\nimport { useBackground } from './BackgroundContext';\nimport wallpaper from './wallpapers/wallpaper29.png';\nimport wallpaper1 from './wallpapers/wallpaper25.png';\nimport wallpaper2 from './wallpapers/wallpaper32.png';\nimport wallpaper3 from './wallpapers/wallpaper30.png';\nimport Cat from './profile/cat.jpg';\nimport Dog from './profile/dog.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const userId = sessionStorage.getItem('userId');\n  const {\n    changeBackground\n  } = useBackground();\n  const [userData, setUserData] = useState(null);\n  const [editedData, setEditedData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [validationErrors, setValidationErrors] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [successMessage, setSuccessMessage] = useState('');\n  const [duplicateUserError, setDuplicateUserError] = useState('');\n  const [selectedBackground, setSelectedBackground] = useState('');\n  const [textColor, setTextColor] = useState('#000000'); // Default text color\n  const [inputStyle, setInputStyle] = useState({\n    border: '3px solid #e12b2b'\n  }); // Default input style\n\n  const applyBackgroundStyle = background => {\n    document.body.style.backgroundImage = `url(${background})`;\n    document.body.style.backgroundSize = 'cover';\n    document.body.style.backgroundPosition = 'center';\n    document.body.style.backgroundRepeat = 'no-repeat';\n  };\n  const updateDynamicStyles = newBackground => {\n    if (newBackground === wallpaper1) {\n      setTextColor('#000000'); // Set text color to white\n      setInputStyle({\n        borderBottom: 'none'\n      });\n    } else {\n      resetDynamicStyles(); // Reset styles for other backgrounds\n    }\n  };\n  const resetDynamicStyles = () => {\n    const defaultTextColor = '#000000';\n    const defaultInputStyle = {\n      border: 'none'\n    };\n    setTextColor(defaultTextColor);\n    setInputStyle(defaultInputStyle);\n  };\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8888/game/getUserProfile.php?id=${userId}`, {\n          method: 'GET',\n          credentials: 'omit'\n        });\n        if (!response.ok) {\n          console.error(`HTTP error! Status: ${response.status}`);\n          console.log('Response text (fetchUserData):', await response.text());\n          return;\n        }\n        const result = await response.json();\n        if (result.success) {\n          setUserData(result.userData);\n          setEditedData({\n            username: result.userData.username,\n            email: result.userData.email,\n            password: '' // Do not include the password initially\n          });\n        } else {\n          console.error('Failed to fetch user data:', result.message);\n        }\n      } catch (error) {\n        console.error('Error (fetchUserData):', error);\n      }\n    };\n    if (userId) {\n      fetchUserData();\n    }\n  }, [userId]);\n  useEffect(() => {\n    const storedBackground = localStorage.getItem('selectedBackground');\n    if (storedBackground && storedBackground !== selectedBackground) {\n      setSelectedBackground(storedBackground);\n      changeBackground(storedBackground);\n      applyBackgroundStyle(storedBackground);\n      updateDynamicStyles(storedBackground);\n    }\n  }, [changeBackground, selectedBackground]);\n  const checkEmailExists = async email => {\n    try {\n      const response = await fetch(`http://localhost:8888/game/checkEmailExists.php?email=${email}`, {\n        method: 'GET',\n        credentials: 'omit'\n      });\n      if (!response.ok) {\n        console.error(`HTTP error! Status: ${response.status}`);\n        console.log('Response text (checkEmailExists):', await response.text());\n        return false; // Treat as non-existing email on error\n      }\n      const result = await response.json();\n      return result.exists;\n    } catch (error) {\n      console.error('Error (checkEmailExists):', error);\n      return false; // Treat as non-existing email on error\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedData({\n      ...editedData,\n      [name]: value\n    });\n    setValidationErrors({\n      ...validationErrors,\n      [name]: ''\n    });\n    setSuccessMessage('');\n    setDuplicateUserError('');\n    resetDynamicStyles();\n  };\n  const validateInputs = () => {\n    let valid = true;\n    const errors = {};\n    if (!editedData.username.trim()) {\n      valid = false;\n      errors.username = 'Username cannot be empty';\n    }\n    if (!editedData.email.trim()) {\n      valid = false;\n      errors.email = 'Email cannot be empty';\n    }\n    if (!editedData.password.trim()) {\n      valid = false;\n      errors.password = 'Password cannot be empty';\n    }\n    if (!editedData.email.includes('@')) {\n      valid = false;\n      errors.email = 'Invalid email format';\n    }\n    if (editedData.password.length < 7) {\n      valid = false;\n      errors.password = 'Password must be at least 7 characters';\n    }\n    if (!/^[a-zA-Z]+$/.test(editedData.username)) {\n      valid = false;\n      errors.username = 'Username can only contain Latin alphabet characters';\n    }\n    setValidationErrors(errors);\n    return valid;\n  };\n  const handleSave = async () => {\n    try {\n      if (!validateInputs()) {\n        console.error('Validation failed. Please check the form for errors.');\n        return;\n      }\n\n      // Check if the edited username is different from the current username\n      const currentUsername = userData.username;\n      const editedUsername = editedData.username;\n      if (currentUsername !== editedUsername) {\n        // Check for duplicate username\n        const usernameExists = await checkUsernameExists(editedData.username);\n        if (usernameExists) {\n          setDuplicateUserError('Username already exists. Please choose a different one.');\n          return;\n        }\n      }\n\n      // Check if the edited email is different from the current email\n      const currentEmail = userData.email;\n      const editedEmail = editedData.email;\n      if (currentEmail !== editedEmail) {\n        // Check for duplicate email\n        const emailExists = await checkEmailExists(editedData.email);\n        if (emailExists) {\n          setDuplicateUserError('Email already exists. Please choose a different one.');\n          return;\n        }\n      }\n\n      // Proceed with saving the profile data\n      const requestData = {\n        username: editedData.username,\n        email: editedData.email,\n        ...(editedData.password && {\n          password: editedData.password\n        })\n      };\n      const response = await fetch(`http://localhost:8888/game/updateUserProfile.php?id=${userId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'omit',\n        body: JSON.stringify(requestData)\n      });\n      if (!response.ok) {\n        console.error(`HTTP error! Status: ${response.status}`);\n        console.log('Response text (handleSave):', await response.text());\n        return;\n      }\n      const result = await response.json();\n      if (result.success) {\n        setUserData(result.userData);\n        setSuccessMessage('Profile data updated successfully');\n        console.log('User data updated successfully');\n      } else {\n        if (result.errorCode === 'DUPLICATE_USER') {\n          setDuplicateUserError(result.message);\n        } else {\n          console.error('Failed to update user data:', result.message);\n        }\n      }\n    } catch (error) {\n      console.error('Error (handleSave):', error);\n    }\n  };\n  const checkUsernameExists = async username => {\n    try {\n      const response = await fetch(`http://localhost:8888/game/checkUsernameExists.php?username=${username}`, {\n        method: 'GET',\n        credentials: 'omit'\n      });\n      if (!response.ok) {\n        console.error(`HTTP error! Status: ${response.status}`);\n        console.log('Response text (checkUsernameExists):', await response.text());\n        return false; // Treat as non-existing username on error\n      }\n      const result = await response.json();\n      return result.exists;\n    } catch (error) {\n      console.error('Error (checkUsernameExists):', error);\n      return false; // Treat as non-existing username on error\n    }\n  };\n  const handleBackgroundChange = newBackground => {\n    setSelectedBackground(newBackground);\n    changeBackground(newBackground);\n    applyBackgroundStyle(newBackground);\n    updateDynamicStyles(newBackground);\n  };\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-second\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile-image-div\",\n              src: Dog\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: editedData.username,\n            onChange: handleInputChange,\n            style: {\n              color: textColor,\n              ...inputStyle\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: validationErrors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 3\n          }, this), \" \", duplicateUserError && duplicateUserError.startsWith('Username already exists') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: duplicateUserError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 86\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: editedData.email,\n            onChange: handleInputChange,\n            style: {\n              color: textColor,\n              ...inputStyle\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: validationErrors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 3\n          }, this), \" \", duplicateUserError && duplicateUserError.startsWith('Email already exists') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: duplicateUserError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 83\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: editedData.password,\n            onChange: handleInputChange,\n            style: {\n              color: textColor,\n              ...inputStyle\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: validationErrors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 3\n          }, this), \" \", successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success-message\",\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"background-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Change Background\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"background-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"a-background\",\n              style: {\n                backgroundImage: `url(${wallpaper})`,\n                backgroundSize: 'cover',\n                backgroundPosition: 'center'\n              },\n              onClick: () => handleBackgroundChange(wallpaper)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"a-background\",\n              style: {\n                backgroundImage: `url(${wallpaper1})`,\n                backgroundSize: 'cover',\n                backgroundPosition: 'center'\n              },\n              onClick: () => handleBackgroundChange(wallpaper1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"a-background\",\n              style: {\n                backgroundImage: `url(${wallpaper2})`,\n                backgroundSize: 'cover',\n                backgroundPosition: 'center'\n              },\n              onClick: () => handleBackgroundChange(wallpaper2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"a-background\",\n              style: {\n                backgroundImage: `url(${wallpaper3})`,\n                backgroundSize: 'cover',\n                backgroundPosition: 'center'\n              },\n              onClick: () => handleBackgroundChange(wallpaper3)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"oc8ZZ0jbEmyTCQPGlz9TmLwBgj8=\", false, function () {\n  return [useBackground];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useBackground","wallpaper","wallpaper1","wallpaper2","wallpaper3","Cat","Dog","jsxDEV","_jsxDEV","Profile","_s","userId","sessionStorage","getItem","changeBackground","userData","setUserData","editedData","setEditedData","username","email","password","validationErrors","setValidationErrors","successMessage","setSuccessMessage","duplicateUserError","setDuplicateUserError","selectedBackground","setSelectedBackground","textColor","setTextColor","inputStyle","setInputStyle","border","applyBackgroundStyle","background","document","body","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","updateDynamicStyles","newBackground","borderBottom","resetDynamicStyles","defaultTextColor","defaultInputStyle","fetchUserData","response","fetch","method","credentials","ok","console","error","status","log","text","result","json","success","message","storedBackground","localStorage","checkEmailExists","exists","handleInputChange","e","name","value","target","validateInputs","valid","errors","trim","includes","length","test","handleSave","currentUsername","editedUsername","usernameExists","checkUsernameExists","currentEmail","editedEmail","emailExists","requestData","headers","JSON","stringify","errorCode","handleBackgroundChange","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","type","onChange","color","startsWith","onClick","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/gameFinishedProduct-main/src/Profile.js"],"sourcesContent":["// Profile.js\n\nimport React, { useState, useEffect } from 'react';\nimport './style/profile.css';\nimport { useBackground } from './BackgroundContext';\nimport wallpaper from './wallpapers/wallpaper29.png';\nimport wallpaper1 from './wallpapers/wallpaper25.png';\nimport wallpaper2 from './wallpapers/wallpaper32.png';\nimport wallpaper3 from './wallpapers/wallpaper30.png';\nimport Cat from './profile/cat.jpg';\nimport Dog from './profile/dog.png';\nconst Profile = () => {\n  const userId = sessionStorage.getItem('userId');\n  const { changeBackground } = useBackground();\n  const [userData, setUserData] = useState(null);\n  const [editedData, setEditedData] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [validationErrors, setValidationErrors] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [successMessage, setSuccessMessage] = useState('');\n  const [duplicateUserError, setDuplicateUserError] = useState('');\n  const [selectedBackground, setSelectedBackground] = useState('');\n  const [textColor, setTextColor] = useState('#000000'); // Default text color\n  const [inputStyle, setInputStyle] = useState({ border: '3px solid #e12b2b' }); // Default input style\n\n  const applyBackgroundStyle = (background) => {\n    document.body.style.backgroundImage = `url(${background})`;\n    document.body.style.backgroundSize = 'cover';\n    document.body.style.backgroundPosition = 'center';\n    document.body.style.backgroundRepeat = 'no-repeat';\n  };\n\n  const updateDynamicStyles = (newBackground) => {\n    if (newBackground === wallpaper1) {\n      setTextColor('#000000'); // Set text color to white\n      setInputStyle({ borderBottom: 'none' });\n    } else {\n      resetDynamicStyles(); // Reset styles for other backgrounds\n    }\n  };\n\n  const resetDynamicStyles = () => {\n    const defaultTextColor = '#000000';\n    const defaultInputStyle = { border: 'none' };\n\n    setTextColor(defaultTextColor);\n    setInputStyle(defaultInputStyle);\n  };\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8888/game/getUserProfile.php?id=${userId}`, {\n          method: 'GET',\n          credentials: 'omit',\n        });\n\n        if (!response.ok) {\n          console.error(`HTTP error! Status: ${response.status}`);\n          console.log('Response text (fetchUserData):', await response.text());\n          return;\n        }\n\n        const result = await response.json();\n\n        if (result.success) {\n          setUserData(result.userData);\n          setEditedData({\n            username: result.userData.username,\n            email: result.userData.email,\n            password: '', // Do not include the password initially\n          });\n        } else {\n          console.error('Failed to fetch user data:', result.message);\n        }\n      } catch (error) {\n        console.error('Error (fetchUserData):', error);\n      }\n    };\n\n    if (userId) {\n      fetchUserData();\n    }\n  }, [userId]);\n\n  useEffect(() => {\n    const storedBackground = localStorage.getItem('selectedBackground');\n    if (storedBackground && storedBackground !== selectedBackground) {\n      setSelectedBackground(storedBackground);\n      changeBackground(storedBackground);\n      applyBackgroundStyle(storedBackground);\n      updateDynamicStyles(storedBackground);\n    }\n  }, [changeBackground, selectedBackground]);\n  \n  const checkEmailExists = async (email) => {\n    try {\n      const response = await fetch(`http://localhost:8888/game/checkEmailExists.php?email=${email}`, {\n        method: 'GET',\n        credentials: 'omit',\n      });\n\n      if (!response.ok) {\n        console.error(`HTTP error! Status: ${response.status}`);\n        console.log('Response text (checkEmailExists):', await response.text());\n        return false; // Treat as non-existing email on error\n      }\n\n      const result = await response.json();\n\n      return result.exists;\n    } catch (error) {\n      console.error('Error (checkEmailExists):', error);\n      return false; // Treat as non-existing email on error\n    }\n  };\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setEditedData({\n      ...editedData,\n      [name]: value,\n    });\n\n    setValidationErrors({\n      ...validationErrors,\n      [name]: '',\n    });\n\n    setSuccessMessage('');\n    setDuplicateUserError('');\n\n    resetDynamicStyles();\n  };\n\n  const validateInputs = () => {\n    let valid = true;\n    const errors = {};\n\n    if (!editedData.username.trim()) {\n      valid = false;\n      errors.username = 'Username cannot be empty';\n    }\n\n    if (!editedData.email.trim()) {\n      valid = false;\n      errors.email = 'Email cannot be empty';\n    }\n\n    if (!editedData.password.trim()) {\n      valid = false;\n      errors.password = 'Password cannot be empty';\n    }\n\n    if (!editedData.email.includes('@')) {\n      valid = false;\n      errors.email = 'Invalid email format';\n    }\n\n    if (editedData.password.length < 7) {\n      valid = false;\n      errors.password = 'Password must be at least 7 characters';\n    }\n\n    if (!/^[a-zA-Z]+$/.test(editedData.username)) {\n      valid = false;\n      errors.username = 'Username can only contain Latin alphabet characters';\n    }\n\n    setValidationErrors(errors);\n\n    return valid;\n  };\n\n  const handleSave = async () => {\n    try {\n      if (!validateInputs()) {\n        console.error('Validation failed. Please check the form for errors.');\n        return;\n      }\n  \n      // Check if the edited username is different from the current username\n      const currentUsername = userData.username;\n      const editedUsername = editedData.username;\n  \n      if (currentUsername !== editedUsername) {\n        // Check for duplicate username\n        const usernameExists = await checkUsernameExists(editedData.username);\n  \n        if (usernameExists) {\n          setDuplicateUserError('Username already exists. Please choose a different one.');\n          return;\n        }\n      }\n  \n      // Check if the edited email is different from the current email\n      const currentEmail = userData.email;\n      const editedEmail = editedData.email;\n  \n      if (currentEmail !== editedEmail) {\n        // Check for duplicate email\n        const emailExists = await checkEmailExists(editedData.email);\n  \n        if (emailExists) {\n          setDuplicateUserError('Email already exists. Please choose a different one.');\n          return;\n        }\n      }\n  \n      // Proceed with saving the profile data\n      const requestData = {\n        username: editedData.username,\n        email: editedData.email,\n        ...(editedData.password && { password: editedData.password }),\n      };\n  \n      const response = await fetch(`http://localhost:8888/game/updateUserProfile.php?id=${userId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'omit',\n        body: JSON.stringify(requestData),\n      });\n  \n      if (!response.ok) {\n        console.error(`HTTP error! Status: ${response.status}`);\n        console.log('Response text (handleSave):', await response.text());\n        return;\n      }\n  \n      const result = await response.json();\n  \n      if (result.success) {\n        setUserData(result.userData);\n        setSuccessMessage('Profile data updated successfully');\n        console.log('User data updated successfully');\n      } else {\n        if (result.errorCode === 'DUPLICATE_USER') {\n          setDuplicateUserError(result.message);\n        } else {\n          console.error('Failed to update user data:', result.message);\n        }\n      }\n    } catch (error) {\n      console.error('Error (handleSave):', error);\n    }\n  };\n  \n  \n  \n  const checkUsernameExists = async (username) => {\n    try {\n      const response = await fetch(`http://localhost:8888/game/checkUsernameExists.php?username=${username}`, {\n        method: 'GET',\n        credentials: 'omit',\n      });\n  \n      if (!response.ok) {\n        console.error(`HTTP error! Status: ${response.status}`);\n        console.log('Response text (checkUsernameExists):', await response.text());\n        return false; // Treat as non-existing username on error\n      }\n  \n      const result = await response.json();\n  \n      return result.exists;\n    } catch (error) {\n      console.error('Error (checkUsernameExists):', error);\n      return false; // Treat as non-existing username on error\n    }\n  };\n  \n\n  const handleBackgroundChange = (newBackground) => {\n    setSelectedBackground(newBackground);\n    changeBackground(newBackground);\n    applyBackgroundStyle(newBackground);\n    updateDynamicStyles(newBackground);\n  };\n\n  if (!userData) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-main\">\n        <div className='profile-second'>\n          <div className='profile-input'>\n            <div className='profile-image'>\n              <img className='profile-image-div' src={Dog}></img>\n            </div>\n            <label><span>Username</span></label>\n  <input type=\"text\" name=\"username\" value={editedData.username} onChange={handleInputChange} style={{ color: textColor, ...inputStyle }} />\n  <div className=\"error-message\">{validationErrors.username}</div> {/* Render username error message */}\n  {duplicateUserError && duplicateUserError.startsWith('Username already exists') && <div className=\"error-message\">{duplicateUserError}</div>} {/* Render duplicate username error message */}\n\n  <label>Email</label>\n  <input type=\"text\" name=\"email\" value={editedData.email} onChange={handleInputChange} style={{ color: textColor, ...inputStyle }} />\n  <div className=\"error-message\">{validationErrors.email}</div> {/* Render email error message */}\n  {duplicateUserError && duplicateUserError.startsWith('Email already exists') && <div className=\"error-message\">{duplicateUserError}</div>} {/* Render duplicate email error message */}\n\n  <label>Password</label>\n  <input type=\"password\" name=\"password\" value={editedData.password} onChange={handleInputChange} style={{ color: textColor, ...inputStyle }} />\n  <div className=\"error-message\">{validationErrors.password}</div> {/* Render password error message */}\n\n  {successMessage && <div className=\"success-message\">{successMessage}</div>}\n  <button onClick={handleSave}>Save</button>\n        </div>\n        <div className='background-right'>\n        <label>Change Background</label>\n        <div className='background-container'>\n          <div\n            className='a-background'\n            style={{\n              backgroundImage: `url(${wallpaper})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'center',\n            }}\n            onClick={() => handleBackgroundChange(wallpaper)}\n          ></div>\n          <div\n            className='a-background'\n            style={{\n              backgroundImage: `url(${wallpaper1})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'center',\n            }}\n            onClick={() => handleBackgroundChange(wallpaper1)}\n          ></div>\n          <div\n            className='a-background'\n            style={{\n              backgroundImage: `url(${wallpaper2})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'center',\n            }}\n            onClick={() => handleBackgroundChange(wallpaper2)}\n          ></div>\n          <div\n            className='a-background'\n            style={{\n              backgroundImage: `url(${wallpaper3})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'center',\n            }}\n            onClick={() => handleBackgroundChange(wallpaper3)}\n          ></div>\n        </div>\n        </div>\n       \n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}