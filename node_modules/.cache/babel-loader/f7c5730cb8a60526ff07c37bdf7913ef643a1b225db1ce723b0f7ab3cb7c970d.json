{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/guess-game/guess/src/game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './style/game.css'; // Adjust the file path based on your project structure\nimport hearts from './image/heart.png';\nimport heart164 from './image/sirds.png';\nimport spade from './image/spade.png';\nimport diamondSide from './image/diamond-side.png';\nimport Clubs from './image/clubs.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const symbols = [heart164, spade, diamondSide, Clubs];\n  const numberOfMatchesToWin = 3;\n  const generateRandomCards = () => {\n    const initialCards = symbols.map((symbol, index) => Array.from({\n      length: 3\n    }, () => ({\n      id: Math.random(),\n      img: symbol,\n      matched: false,\n      type: index\n    }))).flat();\n\n    // Shuffle the cards\n    return initialCards.sort(() => Math.random() - 0.5);\n  };\n  const [cards, setCards] = useState(generateRandomCards());\n  const [flippedCount, setFlippedCount] = useState(0);\n  const [flippedIndexes, setFlippedIndexes] = useState([]);\n  const [checkingForMatch, setCheckingForMatch] = useState(false);\n  useEffect(() => {\n    if (flippedCount === numberOfMatchesToWin && !checkingForMatch) {\n      setCheckingForMatch(true);\n      setTimeout(() => checkForMatch(), 1000);\n    }\n  }, [flippedCount, checkingForMatch]);\n  const handleCardClick = index => {\n    if (!cards[index].matched && !flippedIndexes.includes(index) && !checkingForMatch) {\n      setCards(prevCards => prevCards.map((card, i) => i === index ? {\n        ...card,\n        flipped: true\n      } : card));\n      setFlippedCount(prevCount => prevCount + 1);\n      setFlippedIndexes(prevIndexes => [...prevIndexes, index]);\n    }\n  };\n  const checkForMatch = () => {\n    const flippedIndexesCopy = [...flippedIndexes];\n    let match = true;\n    for (let i = 1; i < flippedIndexesCopy.length; i++) {\n      if (cards[flippedIndexesCopy[i]].img !== cards[flippedIndexesCopy[0]].img) {\n        match = false;\n        break;\n      }\n    }\n    setCards(prevCards => prevCards.map((card, i) => flippedIndexesCopy.includes(i) ? {\n      ...card,\n      flipped: match,\n      matched: match\n    } : card));\n    setFlippedCount(0);\n    setFlippedIndexes([]);\n    setCheckingForMatch(false);\n    if (!match) {\n      // If not a match, instantly flip the first two cards back\n      flippedIndexesCopy.slice(0, 2).forEach(index => {\n        setCards(prevCards => prevCards.map((card, i) => i === index ? {\n          ...card,\n          flipped: false\n        } : card));\n      });\n    }\n    if (match) {\n      checkForWin();\n    }\n  };\n  const checkForWin = () => {\n    if (cards.filter(card => card.matched).length === cards.length) {\n      alert('Congratulations! You found all matching symbols.');\n      // You can reset the game or perform other actions upon winning\n    }\n  };\n  const renderCornerSymbol = type => {\n    switch (type) {\n      case 0:\n        // Heart\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol top-left\",\n          children: \"\\u2665A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 16\n        }, this);\n      case 1:\n        // Spade\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol top-right\",\n          children: \"\\u2660A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 16\n        }, this);\n      case 2:\n        // Diamond\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol bottom-left\",\n          children: \"\\u2666A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 16\n        }, this);\n      case 3:\n        // Club\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol bottom-right\",\n          children: \"\\u2663\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"HINT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-container\",\n        children: \"02:69\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"GIVE UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card1 ${card.flipped ? 'flipped' : ''} ${card.matched ? 'matched' : ''}`,\n        onClick: () => handleCardClick(index),\n        children: card.flipped && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [renderCornerSymbol(card.type), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.img,\n            alt: \"Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"V5RT6gNwnZwrN9qvw/Lom0Jwhuo=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","hearts","heart164","spade","diamondSide","Clubs","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","symbols","numberOfMatchesToWin","generateRandomCards","initialCards","map","symbol","index","Array","from","length","id","Math","random","img","matched","type","flat","sort","cards","setCards","flippedCount","setFlippedCount","flippedIndexes","setFlippedIndexes","checkingForMatch","setCheckingForMatch","setTimeout","checkForMatch","handleCardClick","includes","prevCards","card","i","flipped","prevCount","prevIndexes","flippedIndexesCopy","match","slice","forEach","checkForWin","filter","alert","renderCornerSymbol","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/guess-game/guess/src/game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './style/game.css'; // Adjust the file path based on your project structure\nimport hearts from './image/heart.png';\nimport heart164 from './image/sirds.png';\nimport spade from './image/spade.png';\nimport diamondSide from './image/diamond-side.png';\nimport Clubs from './image/clubs.png';\n\nconst Game = () => {\n  const symbols = [heart164, spade, diamondSide, Clubs];\n  const numberOfMatchesToWin = 3;\n\n  const generateRandomCards = () => {\n    const initialCards = symbols\n      .map((symbol, index) =>\n        Array.from({ length: 3 }, () => ({\n          id: Math.random(),\n          img: symbol,\n          matched: false,\n          type: index,\n        }))\n      )\n      .flat();\n\n    // Shuffle the cards\n    return initialCards.sort(() => Math.random() - 0.5);\n  };\n\n  const [cards, setCards] = useState(generateRandomCards());\n  const [flippedCount, setFlippedCount] = useState(0);\n  const [flippedIndexes, setFlippedIndexes] = useState([]);\n  const [checkingForMatch, setCheckingForMatch] = useState(false);\n\n  useEffect(() => {\n    if (flippedCount === numberOfMatchesToWin && !checkingForMatch) {\n      setCheckingForMatch(true);\n      setTimeout(() => checkForMatch(), 1000);\n    }\n  }, [flippedCount, checkingForMatch]);\n\n  const handleCardClick = (index) => {\n    if (!cards[index].matched && !flippedIndexes.includes(index) && !checkingForMatch) {\n      setCards((prevCards) =>\n        prevCards.map((card, i) =>\n          i === index ? { ...card, flipped: true } : card\n        )\n      );\n      setFlippedCount((prevCount) => prevCount + 1);\n      setFlippedIndexes((prevIndexes) => [...prevIndexes, index]);\n    }\n  };\n\n  const checkForMatch = () => {\n    const flippedIndexesCopy = [...flippedIndexes];\n    let match = true;\n\n    for (let i = 1; i < flippedIndexesCopy.length; i++) {\n      if (cards[flippedIndexesCopy[i]].img !== cards[flippedIndexesCopy[0]].img) {\n        match = false;\n        break;\n      }\n    }\n\n    setCards((prevCards) =>\n      prevCards.map((card, i) =>\n        flippedIndexesCopy.includes(i)\n          ? { ...card, flipped: match, matched: match }\n          : card\n      )\n    );\n\n    setFlippedCount(0);\n    setFlippedIndexes([]);\n    setCheckingForMatch(false);\n\n    if (!match) {\n      // If not a match, instantly flip the first two cards back\n      flippedIndexesCopy.slice(0, 2).forEach((index) => {\n        setCards((prevCards) =>\n          prevCards.map((card, i) =>\n            i === index ? { ...card, flipped: false } : card\n          )\n        );\n      });\n    }\n\n    if (match) {\n      checkForWin();\n    }\n  };\n\n  const checkForWin = () => {\n    if (cards.filter((card) => card.matched).length === cards.length) {\n      alert('Congratulations! You found all matching symbols.');\n      // You can reset the game or perform other actions upon winning\n    }\n  };\n\n  const renderCornerSymbol = (type) => {\n    switch (type) {\n      case 0: // Heart\n        return <div className=\"symbol top-left\">&#x2665;A</div>;\n      case 1: // Spade\n        return <div className=\"symbol top-right\">&#x2660;A</div>;\n      case 2: // Diamond\n        return <div className=\"symbol bottom-left\">&#x2666;A</div>;\n      case 3: // Club\n        return <div className=\"symbol bottom-right\">&#x2663;</div>;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"game-main\">\n      <div className=\"game-buttons\">\n        <button>HINT</button>\n        <div className=\"timer-container\">02:69</div>\n        <button>GIVE UP</button>\n      </div>\n      <div className=\"card-container\">\n        {cards.map((card, index) => (\n          <div\n            key={card.id}\n            className={`card1 ${card.flipped ? 'flipped' : ''} ${\n              card.matched ? 'matched' : ''\n            }`}\n            onClick={() => handleCardClick(index)}\n          >\n            {card.flipped && (\n              <>\n                {renderCornerSymbol(card.type)}\n                <img src={card.img} alt=\"Icon\" />\n              </>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}