{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/guess-game 2/guess/src/Profile.js\",\n  _s = $RefreshSig$();\n// Profile.js\n\nimport React, { useState, useEffect } from 'react';\nimport './style/profile.css';\nimport { useBackground } from './BackgroundContext';\nimport wallpaper from './wallpapers/wallpaper1.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const userId = sessionStorage.getItem('userId');\n  const {\n    changeBackground,\n    availableBackgrounds\n  } = useBackground();\n  const [userData, setUserData] = useState(null);\n  const [editedData, setEditedData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [validationErrors, setValidationErrors] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [successMessage, setSuccessMessage] = useState('');\n  const [duplicateUserError, setDuplicateUserError] = useState('');\n  const [selectedBackground, setSelectedBackground] = useState('');\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8888/game/getUserProfile.php?id=${userId}`, {\n          method: 'GET',\n          credentials: 'omit'\n        });\n        if (!response.ok) {\n          console.error(`HTTP error! Status: ${response.status}`);\n          console.log('Response text:', await response.text());\n          return;\n        }\n        const resultText = await response.text();\n        console.log('Raw result text:', resultText);\n        try {\n          const result = JSON.parse(resultText);\n          if (result.success) {\n            setUserData(result.userData);\n            setEditedData({\n              username: result.userData.username,\n              email: result.userData.email,\n              password: '' // Do not include the password initially\n            });\n          } else {\n            console.error('Failed to fetch user data:', result.message);\n          }\n        } catch (jsonError) {\n          console.error('Error parsing JSON:', jsonError);\n          console.log('Raw result text:', resultText);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    if (userId) {\n      fetchUserData();\n    }\n  }, [userId]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedData({\n      ...editedData,\n      [name]: value\n    });\n    setValidationErrors({\n      ...validationErrors,\n      [name]: ''\n    });\n    setSuccessMessage('');\n    setDuplicateUserError('');\n  };\n  const validateInputs = () => {\n    let valid = true;\n    const errors = {};\n    if (!editedData.username.trim()) {\n      valid = false;\n      errors.username = 'Username cannot be empty';\n    }\n    if (!editedData.email.trim()) {\n      valid = false;\n      errors.email = 'Email cannot be empty';\n    }\n    if (!editedData.password.trim()) {\n      valid = false;\n      errors.password = 'Password cannot be empty';\n    }\n    if (!editedData.email.includes('@')) {\n      valid = false;\n      errors.email = 'Invalid email format';\n    }\n    if (editedData.password.length < 7) {\n      valid = false;\n      errors.password = 'Password must be at least 7 characters';\n    }\n    if (!/^[a-zA-Z]+$/.test(editedData.username)) {\n      valid = false;\n      errors.username = 'Username can only contain Latin alphabet characters';\n    }\n    setValidationErrors(errors);\n    return valid;\n  };\n  const handleSave = async () => {\n    try {\n      if (!validateInputs()) {\n        console.error('Validation failed. Please check the form for errors.');\n        return;\n      }\n      const requestData = {\n        username: editedData.username,\n        email: editedData.email,\n        ...(editedData.password && {\n          password: editedData.password\n        })\n      };\n      const response = await fetch(`http://localhost:8888/game/updateUserProfile.php?id=${userId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'omit',\n        body: JSON.stringify(requestData)\n      });\n      if (!response.ok) {\n        console.error(`HTTP error! Status: ${response.status}`);\n        console.log('Response text:', await response.text());\n        return;\n      }\n      const resultText = await response.text();\n      console.log('Raw result text:', resultText);\n      const result = JSON.parse(resultText);\n      if (result.success) {\n        setUserData(result.userData);\n        setSuccessMessage('Profile data updated successfully');\n        console.log('User data updated successfully');\n      } else {\n        if (result.errorCode === 'DUPLICATE_USER') {\n          setDuplicateUserError(result.message);\n        } else {\n          console.error('Failed to update user data:', result.message);\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleBackgroundChange = newBackground => {\n    setSelectedBackground(newBackground);\n    changeBackground(newBackground);\n  };\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: editedData.username,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: validationErrors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: editedData.email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: validationErrors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: editedData.password,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: validationErrors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), duplicateUserError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: duplicateUserError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 32\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"a-background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"a-background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"a-background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"a-background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"o8xe4NIyVaLWvemLVVXCHIwt5Ak=\", false, function () {\n  return [useBackground];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useBackground","wallpaper","jsxDEV","_jsxDEV","Profile","_s","userId","sessionStorage","getItem","changeBackground","availableBackgrounds","userData","setUserData","editedData","setEditedData","username","email","password","validationErrors","setValidationErrors","successMessage","setSuccessMessage","duplicateUserError","setDuplicateUserError","selectedBackground","setSelectedBackground","fetchUserData","response","fetch","method","credentials","ok","console","error","status","log","text","resultText","result","JSON","parse","success","message","jsonError","handleInputChange","e","name","value","target","validateInputs","valid","errors","trim","includes","length","test","handleSave","requestData","headers","body","stringify","errorCode","handleBackgroundChange","newBackground","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/guess-game 2/guess/src/Profile.js"],"sourcesContent":["// Profile.js\n\nimport React, { useState, useEffect } from 'react';\nimport './style/profile.css';\nimport { useBackground } from './BackgroundContext';\nimport wallpaper from './wallpapers/wallpaper1.jpg';\nconst Profile = () => {\n  const userId = sessionStorage.getItem('userId');\n  const { changeBackground, availableBackgrounds } = useBackground();\n  const [userData, setUserData] = useState(null);\n  const [editedData, setEditedData] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [validationErrors, setValidationErrors] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [successMessage, setSuccessMessage] = useState('');\n  const [duplicateUserError, setDuplicateUserError] = useState('');\n  const [selectedBackground, setSelectedBackground] = useState('');\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8888/game/getUserProfile.php?id=${userId}`, {\n          method: 'GET',\n          credentials: 'omit',\n        });\n\n        if (!response.ok) {\n          console.error(`HTTP error! Status: ${response.status}`);\n          console.log('Response text:', await response.text());\n          return;\n        }\n\n        const resultText = await response.text();\n        console.log('Raw result text:', resultText);\n\n        try {\n          const result = JSON.parse(resultText);\n          if (result.success) {\n            setUserData(result.userData);\n            setEditedData({\n              username: result.userData.username,\n              email: result.userData.email,\n              password: '', // Do not include the password initially\n            });\n          } else {\n            console.error('Failed to fetch user data:', result.message);\n          }\n        } catch (jsonError) {\n          console.error('Error parsing JSON:', jsonError);\n          console.log('Raw result text:', resultText);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n\n    if (userId) {\n      fetchUserData();\n    }\n  }, [userId]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setEditedData({\n      ...editedData,\n      [name]: value,\n    });\n\n    setValidationErrors({\n      ...validationErrors,\n      [name]: '',\n    });\n\n    setSuccessMessage('');\n    setDuplicateUserError('');\n  };\n\n  const validateInputs = () => {\n    let valid = true;\n    const errors = {};\n\n    if (!editedData.username.trim()) {\n      valid = false;\n      errors.username = 'Username cannot be empty';\n    }\n\n    if (!editedData.email.trim()) {\n      valid = false;\n      errors.email = 'Email cannot be empty';\n    }\n\n    if (!editedData.password.trim()) {\n      valid = false;\n      errors.password = 'Password cannot be empty';\n    }\n\n    if (!editedData.email.includes('@')) {\n      valid = false;\n      errors.email = 'Invalid email format';\n    }\n\n    if (editedData.password.length < 7) {\n      valid = false;\n      errors.password = 'Password must be at least 7 characters';\n    }\n\n    if (!/^[a-zA-Z]+$/.test(editedData.username)) {\n      valid = false;\n      errors.username = 'Username can only contain Latin alphabet characters';\n    }\n\n    setValidationErrors(errors);\n\n    return valid;\n  };\n\n  const handleSave = async () => {\n    try {\n      if (!validateInputs()) {\n        console.error('Validation failed. Please check the form for errors.');\n        return;\n      }\n\n      const requestData = {\n        username: editedData.username,\n        email: editedData.email,\n        ...(editedData.password && { password: editedData.password }),\n      };\n\n      const response = await fetch(`http://localhost:8888/game/updateUserProfile.php?id=${userId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'omit',\n        body: JSON.stringify(requestData),\n      });\n\n      if (!response.ok) {\n        console.error(`HTTP error! Status: ${response.status}`);\n        console.log('Response text:', await response.text());\n        return;\n      }\n\n      const resultText = await response.text();\n      console.log('Raw result text:', resultText);\n\n      const result = JSON.parse(resultText);\n\n      if (result.success) {\n        setUserData(result.userData);\n        setSuccessMessage('Profile data updated successfully');\n        console.log('User data updated successfully');\n      } else {\n        if (result.errorCode === 'DUPLICATE_USER') {\n          setDuplicateUserError(result.message);\n        } else {\n          console.error('Failed to update user data:', result.message);\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleBackgroundChange = (newBackground) => {\n    setSelectedBackground(newBackground);\n    changeBackground(newBackground);\n  };\n\n  if (!userData) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-main\">\n        <label>Username</label>\n        <input type=\"text\" name=\"username\" value={editedData.username} onChange={handleInputChange} />\n        <div className=\"error-message\">{validationErrors.username}</div>\n\n        <label>Email</label>\n        <input type=\"text\" name=\"email\" value={editedData.email} onChange={handleInputChange} />\n        <div className=\"error-message\">{validationErrors.email}</div>\n\n        <label>Password</label>\n        <input type=\"password\" name=\"password\" value={editedData.password} onChange={handleInputChange} />\n        <div className=\"error-message\">{validationErrors.password}</div>\n\n        {duplicateUserError && <div className=\"error-message\">{duplicateUserError}</div>}\n        {successMessage && <div className=\"success-message\">{successMessage}</div>}\n\n        <label>Background</label>\n        <div className='background-container'>\n          <div className='a-background'></div>\n          <div className='a-background'></div>\n          <div className='a-background'></div>\n          <div className='a-background'></div>\n        </div>\n\n        <button onClick={handleSave}>Save</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}