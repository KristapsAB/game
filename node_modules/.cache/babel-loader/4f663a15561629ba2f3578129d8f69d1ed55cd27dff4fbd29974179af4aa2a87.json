{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\OneDrive\\\\Desktop\\\\windows-game-main\\\\windows-game-main\\\\src\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google'; // Import GoogleLogin component\nimport './style/styles.css'; // Adjust the file path based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginStatus, setLoginStatus] = useState(null);\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const generateRandomUsername = () => {\n    const adjectives = ['Happy', 'Funny', 'Clever', 'Smart', 'Creative'];\n    const nouns = ['Cat', 'Dog', 'Rabbit', 'Tiger', 'Elephant'];\n    const randomAdjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n    const randomNoun = nouns[Math.floor(Math.random() * nouns.length)];\n    return `${randomAdjective}${randomNoun}`;\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost/game/login.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        }),\n        credentials: 'omit'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      if (result.success) {\n        console.log('Login successful');\n\n        // Save user data in localStorage upon successful login\n        localStorage.setItem('loggedInUser', JSON.stringify({\n          id: result.userData.id,\n          username: result.userData.username,\n          email: result.userData.email\n        }));\n\n        // Save user ID in sessionStorage\n        sessionStorage.setItem('userId', result.userData.id);\n        localStorage.setItem('isLoggedIn', 'true');\n\n        // Redirect to the levels page\n        navigate('/levels');\n      } else {\n        console.error('Login failed:', result.message);\n      }\n      setLoginStatus({\n        success: result.success,\n        message: result.message\n      });\n    } catch (error) {\n      console.error('Error:', error);\n      setLoginStatus({\n        success: false,\n        message: 'Error during login. Please try again later.'\n      });\n    }\n  };\n  const handleGoogleLoginSuccess = async credentialResponse => {\n    console.log('Google login successful:', credentialResponse);\n\n    // Extract the credential from the response\n    const {\n      credential\n    } = credentialResponse;\n    try {\n      // Send the credential to your backend to obtain the user ID\n      const response = await fetch('http://localhost/game/getUserId.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          credential\n        })\n      });\n      console.log('Fetch response:', response);\n\n      // Read the response body as text\n      const responseBody = await response.text();\n      console.log('Response body:', responseBody);\n\n      // Attempt to parse the response body as JSON\n      const result = JSON.parse(responseBody);\n      console.log('Response from server:', result);\n\n      // Handle the result accordingly\n      if (result.success) {\n        const userId = result.userId;\n        const username = generateRandomUsername();\n        localStorage.setItem('loggedInUser', JSON.stringify({\n          id: userId,\n          username: username,\n          email: result.email\n        }));\n\n        // Redirect to the levels page\n        navigate('/levels');\n      } else {\n        console.error('Login failed:', result.message);\n        // Handle login failure\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle fetch or JSON parsing error\n    }\n  };\n  const handleGoogleLoginError = () => {\n    console.error('Google login failed');\n  };\n  const handleRegister = () => {\n    // Redirect to the registration page\n    navigate('/register');\n  };\n\n  // Retrieve user data from localStorage upon component mount\n  useEffect(() => {\n    const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\n    if (loggedInUser) {\n      // Do something with the user data if needed\n      console.log('Logged in user:', loggedInUser);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: handleEmailChange,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: handlePasswordChange,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"301743701977-0jo8mmnfhqigsk8i1bpti9m6vv50rvgt.apps.googleusercontent.com\" // Replace with your Google OAuth client ID\n          ,\n          onSuccess: handleGoogleLoginSuccess,\n          onError: handleGoogleLoginError,\n          children: \"Login with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), loginStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `login-message ${loginStatus.success ? 'success' : 'error'}`,\n      children: loginStatus.success ? 'Login successful' : loginStatus.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-link\",\n      children: [\"Not a user? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        onClick: handleRegister,\n        children: \"Register now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"VYFgJLUMSGeXXWjPQmmI1WvvolA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","GoogleLogin","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","loginStatus","setLoginStatus","handleEmailChange","e","target","value","generateRandomUsername","adjectives","nouns","randomAdjective","Math","floor","random","length","randomNoun","handlePasswordChange","handleLogin","response","fetch","method","headers","body","JSON","stringify","credentials","ok","Error","status","result","json","success","console","log","localStorage","setItem","id","userData","username","sessionStorage","error","message","handleGoogleLoginSuccess","credentialResponse","credential","responseBody","text","parse","userId","handleGoogleLoginError","handleRegister","loggedInUser","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","clientId","onSuccess","onError","href","_c","$RefreshReg$"],"sources":["C:/Users/krist/OneDrive/Desktop/windows-game-main/windows-game-main/src/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google'; // Import GoogleLogin component\nimport './style/styles.css'; // Adjust the file path based on your project structure\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginStatus, setLoginStatus] = useState(null);\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n  const generateRandomUsername = () => {\n    const adjectives = ['Happy', 'Funny', 'Clever', 'Smart', 'Creative'];\n    const nouns = ['Cat', 'Dog', 'Rabbit', 'Tiger', 'Elephant'];\n    const randomAdjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n    const randomNoun = nouns[Math.floor(Math.random() * nouns.length)];\n    return `${randomAdjective}${randomNoun}`;\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost/game/login.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n        credentials: 'omit',\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const result = await response.json();\n\n      if (result.success) {\n        console.log('Login successful');\n\n        // Save user data in localStorage upon successful login\n        localStorage.setItem('loggedInUser', JSON.stringify({\n          id: result.userData.id,\n          username: result.userData.username,\n          email: result.userData.email,\n        }));\n\n        // Save user ID in sessionStorage\n        sessionStorage.setItem('userId', result.userData.id);\n\n        localStorage.setItem('isLoggedIn', 'true');\n\n        // Redirect to the levels page\n        navigate('/levels');\n      } else {\n        console.error('Login failed:', result.message);\n      }\n\n      setLoginStatus({\n        success: result.success,\n        message: result.message,\n      });\n    } catch (error) {\n      console.error('Error:', error);\n\n      setLoginStatus({\n        success: false,\n        message: 'Error during login. Please try again later.',\n      });\n    }\n  };\n\n  const handleGoogleLoginSuccess = async (credentialResponse) => {\n    console.log('Google login successful:', credentialResponse);\n    \n    // Extract the credential from the response\n    const { credential } = credentialResponse;\n  \n    try {\n        // Send the credential to your backend to obtain the user ID\n        const response = await fetch('http://localhost/game/getUserId.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ credential }),\n        });\n\n        console.log('Fetch response:', response);\n\n        // Read the response body as text\n        const responseBody = await response.text();\n        console.log('Response body:', responseBody);\n\n        // Attempt to parse the response body as JSON\n        const result = JSON.parse(responseBody);\n\n        console.log('Response from server:', result);\n\n        // Handle the result accordingly\n        if (result.success) {\n            const userId = result.userId;\n            const username = generateRandomUsername();\n\n            localStorage.setItem('loggedInUser', JSON.stringify({\n                id: userId,\n                username: username,\n                email: result.email,\n            }));\n\n            // Redirect to the levels page\n            navigate('/levels');\n        } else {\n            console.error('Login failed:', result.message);\n            // Handle login failure\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        // Handle fetch or JSON parsing error\n    }\n};\n\n  const handleGoogleLoginError = () => {\n    console.error('Google login failed');\n  };\n\n  const handleRegister = () => {\n    // Redirect to the registration page\n    navigate('/register');\n  };\n\n  // Retrieve user data from localStorage upon component mount\n  useEffect(() => {\n    const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\n    if (loggedInUser) {\n      // Do something with the user data if needed\n      console.log('Logged in user:', loggedInUser);\n    }\n  }, []);\n\n  return (\n    <div className=\"login-main\">\n      <h2>Login</h2>\n      <form>\n        <input type=\"email\" value={email} onChange={handleEmailChange} placeholder=\"Email\" />\n        <br />\n        <input type=\"password\" value={password} onChange={handlePasswordChange} placeholder=\"Password\" />\n        <br />\n        <div className=\"button\">\n          <button type=\"button\" onClick={handleLogin}>\n            Login\n          </button>\n          <GoogleLogin\n            clientId=\"301743701977-0jo8mmnfhqigsk8i1bpti9m6vv50rvgt.apps.googleusercontent.com\" // Replace with your Google OAuth client ID\n            onSuccess={handleGoogleLoginSuccess}\n            onError={handleGoogleLoginError}\n          >\n            Login with Google\n          </GoogleLogin>\n        </div>\n      </form>\n\n      {loginStatus && (\n        <div className={`login-message ${loginStatus.success ? 'success' : 'error'}`}>\n          {loginStatus.success\n            ? 'Login successful'\n            : loginStatus.message}\n        </div>\n      )}\n\n      <div className=\"register-link\">\n        Not a user? <a href=\"/register\" onClick={handleRegister}>Register now</a>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}