{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/guess-game/guess/src/game.jsx\",\n  _s = $RefreshSig$();\n// src/components/Game.js\nimport React, { useState, useEffect } from 'react';\nimport './style/game.css'; // Adjust the file path based on your project structure\nimport hearts from './image/heart.png';\nimport heart164 from './image/sirds.png';\nimport spade from './image/spade.png';\nimport diamond from './image/diamond.png';\nimport diamondSide from './image/diamond-side.png';\nimport Clubs from './image/clubs.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const cards = [{\n    text: 'A',\n    icon: heart164,\n    type: 'hearts'\n  }, {\n    text: 'A',\n    icon: spade,\n    type: 'spades'\n  }, {\n    text: 'A',\n    icon: diamondSide,\n    type: 'diamonds'\n  }, {\n    text: 'A',\n    icon: Clubs,\n    type: 'clubs'\n  }];\n\n  // Function to generate a deck with 3 cards of each type\n  const generateDeck = () => {\n    const deck = [];\n    for (let i = 0; i < 3; i++) {\n      deck.push(...cards);\n    }\n    return deck;\n  };\n\n  // State to store the shuffled cards\n  const [shuffledCards, setShuffledCards] = useState([]);\n\n  // Function to shuffle the cards using Fisher-Yates algorithm\n  const shuffleCards = array => {\n    let currentIndex = array.length,\n      randomIndex;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  };\n\n  // useEffect to shuffle and generate the cards when the component mounts\n  useEffect(() => {\n    const deck = generateDeck();\n    const shuffled = shuffleCards([...deck]);\n    setShuffledCards(shuffled);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"HINT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-container\",\n        children: \"02:69\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"GIVE UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: shuffledCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-text-second\",\n          children: [card.text, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.icon,\n            alt: \"Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heart-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"hearts\",\n            src: hearts,\n            alt: \"Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-text-first\",\n          children: [card.text, card.type === 'hearts' && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: heart164,\n            alt: \"Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 42\n          }, this), card.type === 'spades' && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: spade,\n            alt: \"Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 42\n          }, this), card.type === 'diamonds' && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: diamondSide,\n            alt: \"Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 44\n          }, this), card.type === 'clubs' && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Clubs,\n            alt: \"Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"UYaNjlDiVUBGjb2Q4w+y3Hle6Hw=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","hearts","heart164","spade","diamond","diamondSide","Clubs","jsxDEV","_jsxDEV","Game","_s","cards","text","icon","type","generateDeck","deck","i","push","shuffledCards","setShuffledCards","shuffleCards","array","currentIndex","length","randomIndex","Math","floor","random","shuffled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","src","alt","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/guess-game/guess/src/game.jsx"],"sourcesContent":["// src/components/Game.js\nimport React, { useState, useEffect } from 'react';\nimport './style/game.css'; // Adjust the file path based on your project structure\nimport hearts from './image/heart.png';\nimport heart164 from './image/sirds.png';\nimport spade from './image/spade.png';\nimport diamond from './image/diamond.png';\nimport diamondSide from './image/diamond-side.png';\nimport Clubs from './image/clubs.png';\n\nconst Game = () => {\n  const cards = [\n    { text: 'A', icon: heart164, type: 'hearts' },\n    { text: 'A', icon: spade, type: 'spades' },\n    { text: 'A', icon: diamondSide, type: 'diamonds' },\n    { text: 'A', icon: Clubs, type: 'clubs' },\n  ];\n\n  // Function to generate a deck with 3 cards of each type\n  const generateDeck = () => {\n    const deck = [];\n    for (let i = 0; i < 3; i++) {\n      deck.push(...cards);\n    }\n    return deck;\n  };\n\n  // State to store the shuffled cards\n  const [shuffledCards, setShuffledCards] = useState([]);\n\n  // Function to shuffle the cards using Fisher-Yates algorithm\n  const shuffleCards = (array) => {\n    let currentIndex = array.length,\n      randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex],\n        array[currentIndex],\n      ];\n    }\n\n    return array;\n  };\n\n  // useEffect to shuffle and generate the cards when the component mounts\n  useEffect(() => {\n    const deck = generateDeck();\n    const shuffled = shuffleCards([...deck]);\n    setShuffledCards(shuffled);\n  }, []);\n\n  return (\n    <div className=\"game-main\">\n      <div className=\"game-buttons\">\n        <button>HINT</button>\n        <div className=\"timer-container\">02:69</div>\n        <button>GIVE UP</button>\n      </div>\n      <div className=\"card-container\">\n        {shuffledCards.map((card, index) => (\n          <div className=\"card1\" key={index}>\n            <div className=\"card-text-second\">\n              {card.text}\n              <img src={card.icon} alt=\"Icon\" />\n            </div>\n            <div className=\"heart-icon\">\n              <img className=\"hearts\" src={hearts} alt=\"Icon\" />\n            </div>\n            <div className=\"card-text-first\">\n              {card.text}\n              {card.type === 'hearts' && <img src={heart164} alt=\"Icon\" />}\n              {card.type === 'spades' && <img src={spade} alt=\"Icon\" />}\n              {card.type === 'diamonds' && <img src={diamondSide} alt=\"Icon\" />}\n              {card.type === 'clubs' && <img src={Clubs} alt=\"Icon\" />}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}