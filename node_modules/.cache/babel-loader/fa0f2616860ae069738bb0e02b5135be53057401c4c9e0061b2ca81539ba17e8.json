{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\OneDrive\\\\Desktop\\\\windows-game-main\\\\windows-game-main\\\\src\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './style/styles.css'; // Adjust the file path based on your project structure\nimport { GoogleLogin } from 'react-google-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loginStatus, setLoginStatus] = useState(null);\n  const handleLoginSuccess = () => {\n    // Redirect to the levels page\n    navigate('/levels');\n  };\n  const handleLoginFailure = error => {\n    console.error('Login failed:', error);\n    setLoginStatus({\n      success: false,\n      message: 'Error during login. Please try again later.'\n    });\n  };\n  const handleGoogleLoginSuccess = response => {\n    console.log(\"Google Login Successful!\", response.profileObj);\n    // Handle successful Google login here, e.g., send the token to your backend for verification\n    handleLoginSuccess();\n  };\n  const handleGoogleLoginFailure = error => {\n    console.log(\"Google Login Failed!\", error);\n    // Handle failed Google login here\n    handleLoginFailure(error);\n  };\n  const handleRegister = () => {\n    // Redirect to the registration page\n    navigate('/register');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signInButton\",\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: \"916183960867-podcm2n2nil1q66r019e53o02d8obb2h.apps.googleusercontent.com\",\n        buttonText: \"Login with Google\",\n        onSuccess: handleGoogleLoginSuccess,\n        onFailure: handleGoogleLoginFailure,\n        cookiePolicy: 'single_host_origin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), loginStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `login-message ${loginStatus.success ? 'success' : 'error'}`,\n      children: loginStatus.success ? 'Login successful' : loginStatus.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-link\",\n      children: [\"Not a user? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        onClick: handleRegister,\n        children: \"Register now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"H//GcnaT+oalqkkowuuNI+KXZOc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","GoogleLogin","jsxDEV","_jsxDEV","Login","_s","navigate","loginStatus","setLoginStatus","handleLoginSuccess","handleLoginFailure","error","console","success","message","handleGoogleLoginSuccess","response","log","profileObj","handleGoogleLoginFailure","handleRegister","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","clientId","buttonText","onSuccess","onFailure","cookiePolicy","href","onClick","_c","$RefreshReg$"],"sources":["C:/Users/krist/OneDrive/Desktop/windows-game-main/windows-game-main/src/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './style/styles.css'; // Adjust the file path based on your project structure\nimport { GoogleLogin } from 'react-google-login';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [loginStatus, setLoginStatus] = useState(null);\n\n  const handleLoginSuccess = () => {\n    // Redirect to the levels page\n    navigate('/levels');\n  };\n\n  const handleLoginFailure = (error) => {\n    console.error('Login failed:', error);\n    setLoginStatus({\n      success: false,\n      message: 'Error during login. Please try again later.',\n    });\n  };\n\n  const handleGoogleLoginSuccess = (response) => {\n    console.log(\"Google Login Successful!\", response.profileObj);\n    // Handle successful Google login here, e.g., send the token to your backend for verification\n    handleLoginSuccess();\n  };\n\n  const handleGoogleLoginFailure = (error) => {\n    console.log(\"Google Login Failed!\", error);\n    // Handle failed Google login here\n    handleLoginFailure(error);\n  };\n\n  const handleRegister = () => {\n    // Redirect to the registration page\n    navigate('/register');\n  };\n\n  return (\n    <div className=\"login-main\">\n      <h2>Login</h2>\n      \n      <div id=\"signInButton\">\n        <GoogleLogin\n          clientId=\"916183960867-podcm2n2nil1q66r019e53o02d8obb2h.apps.googleusercontent.com\"\n          buttonText=\"Login with Google\"\n          onSuccess={handleGoogleLoginSuccess}\n          onFailure={handleGoogleLoginFailure}\n          cookiePolicy={'single_host_origin'}\n        />\n      </div>\n\n      {loginStatus && (\n        <div className={`login-message ${loginStatus.success ? 'success' : 'error'}`}>\n          {loginStatus.success\n            ? 'Login successful'\n            : loginStatus.message}\n        </div>\n      )}\n\n      <div className=\"register-link\">\n        Not a user? <a href=\"/register\" onClick={handleRegister}>Register now</a>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}