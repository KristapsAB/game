{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/guess-game/guess/src/game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './style/game.css'; // Adjust the file path based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = ['./image/heart.png', './image/sirds.png', './image/spade.png', './image/diamond.png', './image/diamond-side.png', './image/clubs.png'];\nconst Game = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [flippedIndices, setFlippedIndices] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  useEffect(() => {\n    initializeGame();\n  }, []);\n  const initializeGame = () => {\n    const initialCards = images.concat(images);\n    setCards(shuffle(initialCards));\n  };\n  const shuffle = array => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n  const handleCardClick = index => {\n    if (flippedIndices.length < 2 && !flippedIndices.includes(index)) {\n      setFlippedIndices(prev => [...prev, index]);\n    }\n  };\n  useEffect(() => {\n    if (flippedIndices.length === 2) {\n      const [firstIndex, secondIndex] = flippedIndices;\n      if (cards[firstIndex] === cards[secondIndex]) {\n        setMatchedPairs(prev => [...prev, cards[firstIndex]]);\n      }\n      setTimeout(() => setFlippedIndices([]), 1000);\n    }\n  }, [flippedIndices, cards]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: initializeGame,\n        children: \"RESET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-container\",\n        children: \"02:69\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"GIVE UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${flippedIndices.includes(index) || matchedPairs.includes(card) ? 'flipped' : ''}`,\n        onClick: () => handleCardClick(index),\n        children: flippedIndices.includes(index) || matchedPairs.includes(card) ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card,\n          alt: \"Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this) : 'A'\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"I6vt9TF72t59TfrHhpnmcCEWzO4=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","images","Game","_s","cards","setCards","flippedIndices","setFlippedIndices","matchedPairs","setMatchedPairs","initializeGame","initialCards","concat","shuffle","array","sort","Math","random","handleCardClick","index","length","includes","prev","firstIndex","secondIndex","setTimeout","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","card","src","alt","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/guess-game/guess/src/game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './style/game.css'; // Adjust the file path based on your project structure\n\nconst images = [\n  './image/heart.png',\n  './image/sirds.png',\n  './image/spade.png',\n  './image/diamond.png',\n  './image/diamond-side.png',\n  './image/clubs.png',\n];\n\nconst Game = () => {\n  const [cards, setCards] = useState([]);\n  const [flippedIndices, setFlippedIndices] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n\n  useEffect(() => {\n    initializeGame();\n  }, []);\n\n  const initializeGame = () => {\n    const initialCards = images.concat(images);\n    setCards(shuffle(initialCards));\n  };\n\n  const shuffle = (array) => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n\n  const handleCardClick = (index) => {\n    if (flippedIndices.length < 2 && !flippedIndices.includes(index)) {\n      setFlippedIndices((prev) => [...prev, index]);\n    }\n  };\n\n  useEffect(() => {\n    if (flippedIndices.length === 2) {\n      const [firstIndex, secondIndex] = flippedIndices;\n\n      if (cards[firstIndex] === cards[secondIndex]) {\n        setMatchedPairs((prev) => [...prev, cards[firstIndex]]);\n      }\n\n      setTimeout(() => setFlippedIndices([]), 1000);\n    }\n  }, [flippedIndices, cards]);\n\n  return (\n    <div className=\"game-main\">\n      <div className=\"game-buttons\">\n        <button onClick={initializeGame}>RESET</button>\n        <div className=\"timer-container\">02:69</div>\n        <button>GIVE UP</button>\n      </div>\n      <div className=\"card-container\">\n        {cards.map((card, index) => (\n          <div\n            key={index}\n            className={`card ${flippedIndices.includes(index) || matchedPairs.includes(card) ? 'flipped' : ''}`}\n            onClick={() => handleCardClick(index)}\n          >\n            {flippedIndices.includes(index) || matchedPairs.includes(card) ? (\n              <img src={card} alt=\"Icon\" />\n            ) : (\n              'A'\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}