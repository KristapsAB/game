{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/guess-game/guess/windows-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport NavBar from './Nav';\nimport Login from './Login';\nimport Game from './game';\nimport Register from './Register';\nimport Profile from './Profile';\nimport Leaderboard from './Leaderboards';\nimport Stats from './Stats';\nimport { BackgroundProvider } from './BackgroundContext';\nimport History from './History';\nimport Levels from './Level';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const levels = [{\n    cardsCount: 12,\n    gameDuration: 120,\n    reward: 3\n  }, {\n    cardsCount: 12,\n    gameDuration: 110,\n    reward: 4\n  }, {\n    cardsCount: 12,\n    gameDuration: 90,\n    reward: 5\n  }, {\n    cardsCount: 15,\n    gameDuration: 90,\n    reward: 6\n  }, {\n    cardsCount: 15,\n    gameDuration: 80,\n    reward: 7\n  }, {\n    cardsCount: 18,\n    gameDuration: 100,\n    reward: 8\n  }, {\n    cardsCount: 18,\n    gameDuration: 85,\n    reward: 9\n  }, {\n    cardsCount: 18,\n    gameDuration: 80,\n    reward: 10\n  }, {\n    cardsCount: 18,\n    gameDuration: 70,\n    reward: 15\n  }, {\n    cardsCount: 24,\n    gameDuration: 400,\n    reward: 20\n  }, {\n    cardsCount: 21,\n    gameDuration: 320,\n    reward: 25\n  }, {\n    cardsCount: 21,\n    gameDuration: 300,\n    reward: 30\n  }, {\n    cardsCount: 15,\n    gameDuration: 40,\n    reward: 35\n  }, {\n    cardsCount: 18,\n    gameDuration: 50,\n    reward: 40\n  }, {\n    cardsCount: 21,\n    gameDuration: 220,\n    reward: 45\n  }, {\n    cardsCount: 24,\n    gameDuration: 240,\n    reward: 50\n  }, {\n    cardsCount: 24,\n    gameDuration: 220,\n    reward: 60\n  }, {\n    cardsCount: 18,\n    gameDuration: 200,\n    reward: 75\n  }, {\n    cardsCount: 24,\n    gameDuration: 200,\n    reward: 80\n  }, {\n    cardsCount: 24,\n    gameDuration: 180,\n    reward: 85\n  }];\n  const navigate = useNavigate();\n  const getLevelConfig = levelNumber => {\n    const numberOfCards = levels[levelNumber - 1].cardsCount;\n    const coinReward = levels[levelNumber - 1].reward;\n    const timeLimit = levels[levelNumber - 1].gameDuration;\n    return {\n      numberOfCards,\n      coinReward,\n      timeLimit\n    };\n  };\n  const handleGameCompletion = async (userId, levelNumber, gameCompleted) => {\n    try {\n      const levelConfig = getLevelConfig(levelNumber);\n      const score = calculateScore(); // You need to define this function\n\n      const saveScoreUrl = 'http://localhost:8888/game/saveScore.php';\n      const saveScoreResponse = await fetch(saveScoreUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: `userId=${userId}&level=${levelNumber}&score=${score}`,\n        credentials: 'include',\n        mode: 'cors'\n      });\n      if (!saveScoreResponse.ok) {\n        console.error(`HTTP error! Status: ${saveScoreResponse.status}`);\n        console.log('Response text:', await saveScoreResponse.text());\n        return;\n      }\n      const saveScoreResult = await saveScoreResponse.json();\n      if (!saveScoreResult.success) {\n        console.error('Failed to save score:', saveScoreResult.message);\n        return;\n      }\n      console.log('Score saved successfully');\n      if (gameCompleted) {\n        const coinsEarned = levelConfig.coinReward;\n        const updateCoinsUrl = 'http://localhost:8888/game/updateCoins.php';\n        const updateCoinsResponse = await fetch(updateCoinsUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: `userId=${userId}&coins=${coinsEarned}`,\n          credentials: 'include',\n          mode: 'cors'\n        });\n        if (!updateCoinsResponse.ok) {\n          console.error(`HTTP error! Status: ${updateCoinsResponse.status}`);\n          console.log('Response text:', await updateCoinsResponse.text());\n          return;\n        }\n        const updateCoinsResult = await updateCoinsResponse.json();\n        if (!updateCoinsResult.success) {\n          console.error('Failed to update coins:', updateCoinsResult.message);\n          return;\n        }\n        console.log('Coins updated successfully');\n      }\n      navigate('/levels');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(BackgroundProvider, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/levels\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Levels, {\n              levels: levels\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), [...Array(levels.length).keys()].map(levelNumber => /*#__PURE__*/_jsxDEV(Route, {\n          path: `/level/${levelNumber + 1}`,\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Game, {\n              levelConfig: getLevelConfig(levelNumber + 1),\n              handleGameCompletion: (userId, gameCompleted) => handleGameCompletion(userId, levelNumber + 1, gameCompleted)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, levelNumber + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/leaderboard\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Leaderboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/stats\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Stats, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/history\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","useNavigate","NavBar","Login","Game","Register","Profile","Leaderboard","Stats","BackgroundProvider","History","Levels","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","levels","cardsCount","gameDuration","reward","navigate","getLevelConfig","levelNumber","numberOfCards","coinReward","timeLimit","handleGameCompletion","userId","gameCompleted","levelConfig","score","calculateScore","saveScoreUrl","saveScoreResponse","fetch","method","headers","body","credentials","mode","ok","console","error","status","log","text","saveScoreResult","json","success","message","coinsEarned","updateCoinsUrl","updateCoinsResponse","updateCoinsResult","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","Array","length","keys","map","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/guess-game/guess/windows-game/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport NavBar from './Nav';\nimport Login from './Login';\nimport Game from './game';\nimport Register from './Register';\nimport Profile from './Profile';\nimport Leaderboard from './Leaderboards';\nimport Stats from './Stats';\nimport { BackgroundProvider } from './BackgroundContext';\nimport History from './History';\nimport Levels from './Level';\n\nconst App = () => {\n  const levels = [\n    { cardsCount: 12, gameDuration: 120, reward: 3 },\n    { cardsCount: 12, gameDuration: 110, reward: 4 },\n    { cardsCount: 12, gameDuration: 90, reward: 5 },\n    { cardsCount: 15, gameDuration: 90, reward: 6 },\n    { cardsCount: 15, gameDuration: 80, reward: 7 },\n    { cardsCount: 18, gameDuration: 100, reward: 8 },\n    { cardsCount: 18, gameDuration: 85, reward: 9 },\n    { cardsCount: 18, gameDuration: 80, reward: 10 },\n    { cardsCount: 18, gameDuration: 70, reward: 15 },\n    { cardsCount: 24, gameDuration: 400, reward: 20 },\n    { cardsCount: 21, gameDuration: 320, reward: 25 },\n    { cardsCount: 21, gameDuration: 300, reward: 30 },\n    { cardsCount: 15, gameDuration: 40, reward: 35 },\n    { cardsCount: 18, gameDuration: 50, reward: 40 },\n    { cardsCount: 21, gameDuration: 220, reward: 45 },\n    { cardsCount: 24, gameDuration: 240, reward: 50 },\n    { cardsCount: 24, gameDuration: 220, reward: 60 },\n    { cardsCount: 18, gameDuration: 200, reward: 75 },\n    { cardsCount: 24, gameDuration: 200, reward: 80 },\n    { cardsCount: 24, gameDuration: 180, reward: 85 },\n  ];\n\n  const navigate = useNavigate();\n\n  const getLevelConfig = (levelNumber) => {\n    const numberOfCards = levels[levelNumber - 1].cardsCount;\n    const coinReward = levels[levelNumber - 1].reward;\n    const timeLimit = levels[levelNumber - 1].gameDuration;\n    return { numberOfCards, coinReward, timeLimit };\n  };\n\n  const handleGameCompletion = async (userId, levelNumber, gameCompleted) => {\n    try {\n      const levelConfig = getLevelConfig(levelNumber);\n      const score = calculateScore(); // You need to define this function\n\n      const saveScoreUrl = 'http://localhost:8888/game/saveScore.php';\n      const saveScoreResponse = await fetch(saveScoreUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: `userId=${userId}&level=${levelNumber}&score=${score}`,\n        credentials: 'include',\n        mode: 'cors',\n      });\n\n      if (!saveScoreResponse.ok) {\n        console.error(`HTTP error! Status: ${saveScoreResponse.status}`);\n        console.log('Response text:', await saveScoreResponse.text());\n        return;\n      }\n\n      const saveScoreResult = await saveScoreResponse.json();\n\n      if (!saveScoreResult.success) {\n        console.error('Failed to save score:', saveScoreResult.message);\n        return;\n      }\n\n      console.log('Score saved successfully');\n\n      if (gameCompleted) {\n        const coinsEarned = levelConfig.coinReward;\n\n        const updateCoinsUrl = 'http://localhost:8888/game/updateCoins.php';\n        const updateCoinsResponse = await fetch(updateCoinsUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: `userId=${userId}&coins=${coinsEarned}`,\n          credentials: 'include',\n          mode: 'cors',\n        });\n\n        if (!updateCoinsResponse.ok) {\n          console.error(`HTTP error! Status: ${updateCoinsResponse.status}`);\n          console.log('Response text:', await updateCoinsResponse.text());\n          return;\n        }\n\n        const updateCoinsResult = await updateCoinsResponse.json();\n\n        if (!updateCoinsResult.success) {\n          console.error('Failed to update coins:', updateCoinsResult.message);\n          return;\n        }\n\n        console.log('Coins updated successfully');\n      }\n\n      navigate('/levels');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <Router>\n      <BackgroundProvider>\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route\n            path=\"/levels\"\n            element={\n              <>\n                <NavBar />\n                <Levels levels={levels} />\n              </>\n            }\n          />\n          {[...Array(levels.length).keys()].map((levelNumber) => (\n            <Route\n              key={levelNumber + 1}\n              path={`/level/${levelNumber + 1}`}\n              element={\n                <>\n                  <NavBar />\n                  <Game\n                    levelConfig={getLevelConfig(levelNumber + 1)}\n                    handleGameCompletion={(userId, gameCompleted) =>\n                      handleGameCompletion(userId, levelNumber + 1, gameCompleted)\n                    }\n                  />\n                </>\n              }\n            />\n          ))}\n          <Route\n            path=\"/profile\"\n            element={\n              <>\n                <NavBar />\n                <Profile />\n              </>\n            }\n          />\n          <Route\n            path=\"/leaderboard\"\n            element={\n              <>\n                <NavBar />\n                <Leaderboard />\n              </>\n            }\n          />\n          <Route\n            path=\"/stats\"\n            element={\n              <>\n                <NavBar />\n                <Stats />\n              </>\n            }\n          />\n          <Route\n            path=\"/history\"\n            element={\n              <>\n                <NavBar />\n                <History />\n              </>\n            }\n          />\n        </Routes>\n      </BackgroundProvider>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}