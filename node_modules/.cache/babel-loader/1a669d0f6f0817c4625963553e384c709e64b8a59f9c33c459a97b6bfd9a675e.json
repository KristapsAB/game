{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/guess-game/guess/src/game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './style/game.css'; // Adjust the file path based on your project structure\nimport hearts from './image/heart.png';\nimport heart164 from './image/sirds.png';\nimport spade from './image/spade.png';\nimport diamond from './image/diamond.png';\nimport diamondSide from './image/diamond-side.png';\nimport Clubs from './image/clubs.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const cards = [{\n    id: 1,\n    value: 'A',\n    img: heart164\n  }, {\n    id: 2,\n    value: 'A',\n    img: heart164\n  }, {\n    id: 3,\n    value: 'A',\n    img: heart164\n  }, {\n    id: 4,\n    value: 'A',\n    img: spade\n  }, {\n    id: 5,\n    value: 'A',\n    img: spade\n  }, {\n    id: 6,\n    value: 'A',\n    img: spade\n  }, {\n    id: 7,\n    value: 'A',\n    img: diamondSide\n  }, {\n    id: 8,\n    value: 'A',\n    img: diamondSide\n  }, {\n    id: 9,\n    value: 'A',\n    img: diamondSide\n  }, {\n    id: 10,\n    value: 'A',\n    img: Clubs\n  }, {\n    id: 11,\n    value: 'A',\n    img: Clubs\n  }, {\n    id: 12,\n    value: 'A',\n    img: Clubs\n  }];\n  const handleCardClick = card => {\n    if (flipped.length === 2) {\n      setTimeout(() => {\n        setFlipped([]);\n      }, 1000);\n    } else {\n      setFlipped([...flipped, card]);\n    }\n  };\n  const isFlipped = card => flipped.includes(card);\n  const isMatched = card => matched.includes(card);\n  const handleCardFlip = card => {\n    if (!isFlipped(card) && flipped.length < 2 && !isMatched(card)) {\n      handleCardClick(card);\n    }\n  };\n  const handleCardMatch = () => {\n    setMatched([...matched, ...flipped]);\n    setFlipped([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"HINT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-container\",\n        children: \"02:69\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"GIVE UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card1 ${isFlipped(card) || isMatched(card) ? 'flipped' : ''}`,\n        onClick: () => handleCardFlip(card),\n        children: [isFlipped(card) || isMatched(card) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-text-second\",\n          children: card.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-text-first\",\n            children: card.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-text-second\",\n            children: card.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.img,\n          alt: \"Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, card.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"p6ZdJZULFFoxdbGlnKbN1Pk1IGs=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","hearts","heart164","spade","diamond","diamondSide","Clubs","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","flipped","setFlipped","matched","setMatched","cards","id","value","img","handleCardClick","card","length","setTimeout","isFlipped","includes","isMatched","handleCardFlip","handleCardMatch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/guess-game/guess/src/game.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './style/game.css'; // Adjust the file path based on your project structure\nimport hearts from './image/heart.png';\nimport heart164 from './image/sirds.png';\nimport spade from './image/spade.png';\nimport diamond from './image/diamond.png';\nimport diamondSide from './image/diamond-side.png';\nimport Clubs from './image/clubs.png';\n\nconst Game = () => {\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n\n  const cards = [\n    { id: 1, value: 'A', img: heart164 },\n    { id: 2, value: 'A', img: heart164 },\n    { id: 3, value: 'A', img: heart164 },\n    { id: 4, value: 'A', img: spade },\n    { id: 5, value: 'A', img: spade },\n    { id: 6, value: 'A', img: spade },\n    { id: 7, value: 'A', img: diamondSide },\n    { id: 8, value: 'A', img: diamondSide },\n    { id: 9, value: 'A', img: diamondSide },\n    { id: 10, value: 'A', img: Clubs },\n    { id: 11, value: 'A', img: Clubs },\n    { id: 12, value: 'A', img: Clubs },\n  ];\n\n  const handleCardClick = (card) => {\n    if (flipped.length === 2) {\n      setTimeout(() => {\n        setFlipped([]);\n      }, 1000);\n    } else {\n      setFlipped([...flipped, card]);\n    }\n  };\n\n  const isFlipped = (card) => flipped.includes(card);\n\n  const isMatched = (card) => matched.includes(card);\n\n  const handleCardFlip = (card) => {\n    if (!isFlipped(card) && flipped.length < 2 && !isMatched(card)) {\n      handleCardClick(card);\n    }\n  };\n\n  const handleCardMatch = () => {\n    setMatched([...matched, ...flipped]);\n    setFlipped([]);\n  };\n\n  return (\n    <div className=\"game-main\">\n      <div className=\"game-buttons\">\n        <button>HINT</button>\n        <div className=\"timer-container\">02:69</div>\n        <button>GIVE UP</button>\n      </div>\n      <div className=\"card-container\">\n        {cards.map((card) => (\n          <div\n            key={card.id}\n            className={`card1 ${isFlipped(card) || isMatched(card) ? 'flipped' : ''}`}\n            onClick={() => handleCardFlip(card)}\n          >\n            {isFlipped(card) || isMatched(card) ? (\n              <div className=\"card-text-second\">{card.value}</div>\n            ) : (\n              <>\n                <div className=\"card-text-first\">{card.value}</div>\n                <div className=\"card-text-second\">{card.value}</div>\n              </>\n            )}\n            <img src={card.img} alt=\"Icon\" />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}