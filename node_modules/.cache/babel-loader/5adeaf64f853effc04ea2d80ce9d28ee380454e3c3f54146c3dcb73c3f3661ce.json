{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/guess-game/guess/src/game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './style/game.css'; // Adjust the file path based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [require('./image/heart.png'), require('./image/sirds.png'), require('./image/spade.png'), require('./image/diamond.png'), require('./image/diamond-side.png'), require('./image/clubs.png')];\nconst generateCards = () => {\n  const initialCards = images.concat(images);\n  return initialCards.sort(() => Math.random() - 0.5);\n};\nconst MemoryGame = () => {\n  _s();\n  const [cards, setCards] = useState(generateCards());\n  const [flippedIndices, setFlippedIndices] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  useEffect(() => {\n    if (flippedIndices.length === 2) {\n      const [firstIndex, secondIndex] = flippedIndices;\n      if (cards[firstIndex] === cards[secondIndex]) {\n        setMatchedPairs(prev => [...prev, cards[firstIndex]]);\n      }\n      setTimeout(() => setFlippedIndices([]), 1000);\n    }\n  }, [flippedIndices, cards]);\n  const handleCardClick = index => {\n    if (flippedIndices.length < 2 && !flippedIndices.includes(index)) {\n      setFlippedIndices(prev => [...prev, index]);\n    }\n  };\n  const resetGame = () => {\n    setCards(generateCards());\n    setFlippedIndices([]);\n    setMatchedPairs([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"RESET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-container\",\n        children: \"02:69\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"GIVE UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${flippedIndices.includes(index) ? 'flipped' : ''} ${matchedPairs.includes(card) ? 'matched' : ''}`,\n        onClick: () => handleCardClick(index),\n        children: flippedIndices.includes(index) || matchedPairs.includes(card) ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card,\n          alt: \"Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this) : 'A'\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoryGame, \"cgMu+/7PW4ufD6ymdF2RF3AW5mI=\");\n_c = MemoryGame;\nexport default MemoryGame;\nvar _c;\n$RefreshReg$(_c, \"MemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","images","require","generateCards","initialCards","concat","sort","Math","random","MemoryGame","_s","cards","setCards","flippedIndices","setFlippedIndices","matchedPairs","setMatchedPairs","length","firstIndex","secondIndex","prev","setTimeout","handleCardClick","index","includes","resetGame","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","card","src","alt","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/guess-game/guess/src/game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './style/game.css'; // Adjust the file path based on your project structure\n\nconst images = [\n  require('./image/heart.png'),\n  require('./image/sirds.png'),\n  require('./image/spade.png'),\n  require('./image/diamond.png'),\n  require('./image/diamond-side.png'),\n  require('./image/clubs.png'),\n];\n\nconst generateCards = () => {\n  const initialCards = images.concat(images);\n  return initialCards.sort(() => Math.random() - 0.5);\n};\n\nconst MemoryGame = () => {\n  const [cards, setCards] = useState(generateCards());\n  const [flippedIndices, setFlippedIndices] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n\n  useEffect(() => {\n    if (flippedIndices.length === 2) {\n      const [firstIndex, secondIndex] = flippedIndices;\n      if (cards[firstIndex] === cards[secondIndex]) {\n        setMatchedPairs((prev) => [...prev, cards[firstIndex]]);\n      }\n      setTimeout(() => setFlippedIndices([]), 1000);\n    }\n  }, [flippedIndices, cards]);\n\n  const handleCardClick = (index) => {\n    if (flippedIndices.length < 2 && !flippedIndices.includes(index)) {\n      setFlippedIndices((prev) => [...prev, index]);\n    }\n  };\n\n  const resetGame = () => {\n    setCards(generateCards());\n    setFlippedIndices([]);\n    setMatchedPairs([]);\n  };\n\n  return (\n    <div className=\"game-main\">\n      <div className=\"game-buttons\">\n        <button onClick={resetGame}>RESET</button>\n        <div className=\"timer-container\">02:69</div>\n        <button>GIVE UP</button>\n      </div>\n      <div className=\"card-container\">\n        {cards.map((card, index) => (\n          <div\n            key={index}\n            className={`card ${flippedIndices.includes(index) ? 'flipped' : ''} ${\n              matchedPairs.includes(card) ? 'matched' : ''\n            }`}\n            onClick={() => handleCardClick(index)}\n          >\n            {flippedIndices.includes(index) || matchedPairs.includes(card) ? (\n              <img src={card} alt=\"Icon\" />\n            ) : (\n              'A'\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MemoryGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}