{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/guess-game/guess/src/game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './style/game.css'; // Adjust the file path based on your project structure\nimport hearts from './image/heart.png';\nimport heart164 from './image/sirds.png';\nimport spade from './image/spade.png';\nimport diamond from './image/diamond.png';\nimport diamondSide from './image/diamond-side.png';\nimport Clubs from './image/clubs.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [cards, setCards] = useState([{\n    id: 1,\n    value: 'A',\n    img: heart164,\n    flipped: false,\n    matched: false\n  }, {\n    id: 2,\n    value: 'A',\n    img: heart164,\n    flipped: false,\n    matched: false\n  }, {\n    id: 3,\n    value: 'A',\n    img: heart164,\n    flipped: false,\n    matched: false\n  }, {\n    id: 4,\n    value: 'A',\n    img: spade,\n    flipped: false,\n    matched: false\n  }, {\n    id: 5,\n    value: 'A',\n    img: spade,\n    flipped: false,\n    matched: false\n  }, {\n    id: 6,\n    value: 'A',\n    img: spade,\n    flipped: false,\n    matched: false\n  }, {\n    id: 7,\n    value: 'A',\n    img: diamondSide,\n    flipped: false,\n    matched: false\n  }, {\n    id: 8,\n    value: 'A',\n    img: diamondSide,\n    flipped: false,\n    matched: false\n  }, {\n    id: 9,\n    value: 'A',\n    img: diamondSide,\n    flipped: false,\n    matched: false\n  }, {\n    id: 10,\n    value: 'A',\n    img: Clubs,\n    flipped: false,\n    matched: false\n  }, {\n    id: 11,\n    value: 'A',\n    img: Clubs,\n    flipped: false,\n    matched: false\n  }, {\n    id: 12,\n    value: 'A',\n    img: Clubs,\n    flipped: false,\n    matched: false\n  }]);\n  const [flippedCount, setFlippedCount] = useState(0);\n  const [firstFlipped, setFirstFlipped] = useState(null);\n  const [secondFlipped, setSecondFlipped] = useState(null);\n  useEffect(() => {\n    if (flippedCount === 2) {\n      setTimeout(() => checkForMatch(), 1000);\n    }\n  }, [flippedCount]);\n  const handleCardClick = index => {\n    if (!cards[index].flipped) {\n      setCards(prevCards => prevCards.map((card, i) => i === index ? {\n        ...card,\n        flipped: true\n      } : card));\n      setFlippedCount(prevCount => prevCount + 1);\n      if (flippedCount === 0) {\n        setFirstFlipped(index);\n      } else {\n        setSecondFlipped(index);\n      }\n    }\n  };\n  const checkForMatch = () => {\n    if (firstFlipped !== null && secondFlipped !== null && cards[firstFlipped].value === cards[secondFlipped].value) {\n      setCards(prevCards => prevCards.map((card, i) => i === firstFlipped || i === secondFlipped ? {\n        ...card,\n        flipped: true,\n        matched: true\n      } : card));\n    } else {\n      setCards(prevCards => prevCards.map((card, i) => i === firstFlipped || i === secondFlipped ? {\n        ...card,\n        flipped: false\n      } : card));\n    }\n    setFlippedCount(0);\n    setFirstFlipped(null);\n    setSecondFlipped(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"HINT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-container\",\n        children: \"02:69\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"GIVE UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card1 ${card.flipped ? 'flipped' : ''} ${card.matched ? 'matched' : ''}`,\n        onClick: () => handleCardClick(index),\n        children: [card.flipped && !card.matched && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-text-first\",\n            children: card.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-text-second\",\n            children: card.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.img,\n          alt: \"Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, card.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"6lvkeDo5GNGOGZ+Gm1kjM991IiY=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","hearts","heart164","spade","diamond","diamondSide","Clubs","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","cards","setCards","id","value","img","flipped","matched","flippedCount","setFlippedCount","firstFlipped","setFirstFlipped","secondFlipped","setSecondFlipped","setTimeout","checkForMatch","handleCardClick","index","prevCards","map","card","i","prevCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/guess-game/guess/src/game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './style/game.css'; // Adjust the file path based on your project structure\nimport hearts from './image/heart.png';\nimport heart164 from './image/sirds.png';\nimport spade from './image/spade.png';\nimport diamond from './image/diamond.png';\nimport diamondSide from './image/diamond-side.png';\nimport Clubs from './image/clubs.png';\n\nconst Game = () => {\n  const [cards, setCards] = useState([\n    { id: 1, value: 'A', img: heart164, flipped: false, matched: false },\n    { id: 2, value: 'A', img: heart164, flipped: false, matched: false },\n    { id: 3, value: 'A', img: heart164, flipped: false, matched: false },\n    { id: 4, value: 'A', img: spade, flipped: false, matched: false },\n    { id: 5, value: 'A', img: spade, flipped: false, matched: false },\n    { id: 6, value: 'A', img: spade, flipped: false, matched: false },\n    { id: 7, value: 'A', img: diamondSide, flipped: false, matched: false },\n    { id: 8, value: 'A', img: diamondSide, flipped: false, matched: false },\n    { id: 9, value: 'A', img: diamondSide, flipped: false, matched: false },\n    { id: 10, value: 'A', img: Clubs, flipped: false, matched: false },\n    { id: 11, value: 'A', img: Clubs, flipped: false, matched: false },\n    { id: 12, value: 'A', img: Clubs, flipped: false, matched: false },\n  ]);\n\n  const [flippedCount, setFlippedCount] = useState(0);\n  const [firstFlipped, setFirstFlipped] = useState(null);\n  const [secondFlipped, setSecondFlipped] = useState(null);\n\n  useEffect(() => {\n    if (flippedCount === 2) {\n      setTimeout(() => checkForMatch(), 1000);\n    }\n  }, [flippedCount]);\n\n  const handleCardClick = (index) => {\n    if (!cards[index].flipped) {\n      setCards((prevCards) =>\n        prevCards.map((card, i) =>\n          i === index ? { ...card, flipped: true } : card\n        )\n      );\n      setFlippedCount((prevCount) => prevCount + 1);\n\n      if (flippedCount === 0) {\n        setFirstFlipped(index);\n      } else {\n        setSecondFlipped(index);\n      }\n    }\n  };\n\n  const checkForMatch = () => {\n    if (\n      firstFlipped !== null &&\n      secondFlipped !== null &&\n      cards[firstFlipped].value === cards[secondFlipped].value\n    ) {\n      setCards((prevCards) =>\n        prevCards.map((card, i) =>\n          i === firstFlipped || i === secondFlipped\n            ? { ...card, flipped: true, matched: true }\n            : card\n        )\n      );\n    } else {\n      setCards((prevCards) =>\n        prevCards.map((card, i) =>\n          i === firstFlipped || i === secondFlipped\n            ? { ...card, flipped: false }\n            : card\n        )\n      );\n    }\n\n    setFlippedCount(0);\n    setFirstFlipped(null);\n    setSecondFlipped(null);\n  };\n\n  return (\n    <div className=\"game-main\">\n      <div className=\"game-buttons\">\n        <button>HINT</button>\n        <div className=\"timer-container\">02:69</div>\n        <button>GIVE UP</button>\n      </div>\n      <div className=\"card-container\">\n        {cards.map((card, index) => (\n          <div\n            key={card.id}\n            className={`card1 ${card.flipped ? 'flipped' : ''} ${\n              card.matched ? 'matched' : ''\n            }`}\n            onClick={() => handleCardClick(index)}\n          >\n            {card.flipped && !card.matched && (\n              <>\n                <div className=\"card-text-first\">{card.value}</div>\n                <div className=\"card-text-second\">{card.value}</div>\n              </>\n            )}\n            <img src={card.img} alt=\"Icon\" />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB,CAAC,CAAC;AAC3B,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,KAAK,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CACjC;IAAEgB,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAEf,QAAQ;IAAEgB,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAM,CAAC,EACpE;IAAEJ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAEf,QAAQ;IAAEgB,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAM,CAAC,EACpE;IAAEJ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAEf,QAAQ;IAAEgB,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAM,CAAC,EACpE;IAAEJ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAEd,KAAK;IAAEe,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAM,CAAC,EACjE;IAAEJ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAEd,KAAK;IAAEe,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAM,CAAC,EACjE;IAAEJ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAEd,KAAK;IAAEe,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAM,CAAC,EACjE;IAAEJ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAEZ,WAAW;IAAEa,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAM,CAAC,EACvE;IAAEJ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAEZ,WAAW;IAAEa,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAM,CAAC,EACvE;IAAEJ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAEZ,WAAW;IAAEa,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAM,CAAC,EACvE;IAAEJ,EAAE,EAAE,EAAE;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAEX,KAAK;IAAEY,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAM,CAAC,EAClE;IAAEJ,EAAE,EAAE,EAAE;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAEX,KAAK;IAAEY,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAM,CAAC,EAClE;IAAEJ,EAAE,EAAE,EAAE;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAEX,KAAK;IAAEY,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAM,CAAC,CACnE,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,IAAIoB,YAAY,KAAK,CAAC,EAAE;MACtBM,UAAU,CAAC,MAAMC,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC;IACzC;EACF,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;EAElB,MAAMQ,eAAe,GAAIC,KAAK,IAAK;IACjC,IAAI,CAAChB,KAAK,CAACgB,KAAK,CAAC,CAACX,OAAO,EAAE;MACzBJ,QAAQ,CAAEgB,SAAS,IACjBA,SAAS,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KACpBA,CAAC,KAAKJ,KAAK,GAAG;QAAE,GAAGG,IAAI;QAAEd,OAAO,EAAE;MAAK,CAAC,GAAGc,IAC7C,CACF,CAAC;MACDX,eAAe,CAAEa,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;MAE7C,IAAId,YAAY,KAAK,CAAC,EAAE;QACtBG,eAAe,CAACM,KAAK,CAAC;MACxB,CAAC,MAAM;QACLJ,gBAAgB,CAACI,KAAK,CAAC;MACzB;IACF;EACF,CAAC;EAED,MAAMF,aAAa,GAAGA,CAAA,KAAM;IAC1B,IACEL,YAAY,KAAK,IAAI,IACrBE,aAAa,KAAK,IAAI,IACtBX,KAAK,CAACS,YAAY,CAAC,CAACN,KAAK,KAAKH,KAAK,CAACW,aAAa,CAAC,CAACR,KAAK,EACxD;MACAF,QAAQ,CAAEgB,SAAS,IACjBA,SAAS,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KACpBA,CAAC,KAAKX,YAAY,IAAIW,CAAC,KAAKT,aAAa,GACrC;QAAE,GAAGQ,IAAI;QAAEd,OAAO,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAK,CAAC,GACzCa,IACN,CACF,CAAC;IACH,CAAC,MAAM;MACLlB,QAAQ,CAAEgB,SAAS,IACjBA,SAAS,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KACpBA,CAAC,KAAKX,YAAY,IAAIW,CAAC,KAAKT,aAAa,GACrC;QAAE,GAAGQ,IAAI;QAAEd,OAAO,EAAE;MAAM,CAAC,GAC3Bc,IACN,CACF,CAAC;IACH;IAEAX,eAAe,CAAC,CAAC,CAAC;IAClBE,eAAe,CAAC,IAAI,CAAC;IACrBE,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,oBACEjB,OAAA;IAAK2B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB5B,OAAA;MAAK2B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B5B,OAAA;QAAA4B,QAAA,EAAQ;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrBhC,OAAA;QAAK2B,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5ChC,OAAA;QAAA4B,QAAA,EAAQ;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACNhC,OAAA;MAAK2B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BvB,KAAK,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEH,KAAK,kBACrBrB,OAAA;QAEE2B,SAAS,EAAG,SAAQH,IAAI,CAACd,OAAO,GAAG,SAAS,GAAG,EAAG,IAChDc,IAAI,CAACb,OAAO,GAAG,SAAS,GAAG,EAC5B,EAAE;QACHsB,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAACC,KAAK,CAAE;QAAAO,QAAA,GAErCJ,IAAI,CAACd,OAAO,IAAI,CAACc,IAAI,CAACb,OAAO,iBAC5BX,OAAA,CAAAE,SAAA;UAAA0B,QAAA,gBACE5B,OAAA;YAAK2B,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAEJ,IAAI,CAAChB;UAAK;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACnDhC,OAAA;YAAK2B,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAEJ,IAAI,CAAChB;UAAK;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,eACpD,CACH,eACDhC,OAAA;UAAKkC,GAAG,EAAEV,IAAI,CAACf,GAAI;UAAC0B,GAAG,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAZ5BR,IAAI,CAACjB,EAAE;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaT,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAnGID,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAqGV,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}