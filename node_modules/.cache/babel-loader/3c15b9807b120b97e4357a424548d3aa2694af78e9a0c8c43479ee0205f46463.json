{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\OneDrive\\\\Desktop\\\\windows-game-main\\\\windows-game-main\\\\src\\\\App.js\";\n// App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport NavBar from './Nav';\nimport Login from './Login';\nimport Game from './game';\nimport Register from './Register';\nimport Profile from './Profile';\nimport Leaderboard from './Leaderboards';\nimport Stats from './Stats';\nimport { BackgroundProvider } from './BackgroundContext';\nimport History from './History';\nimport Levels from './Level';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google'; // Import GoogleLogin component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const levels = [{\n    cardsCount: 12,\n    gameDuration: 120,\n    reward: 3\n  }, {\n    cardsCount: 12,\n    gameDuration: 110,\n    reward: 4\n  }, {\n    cardsCount: 12,\n    gameDuration: 90,\n    reward: 5\n  }, {\n    cardsCount: 15,\n    gameDuration: 90,\n    reward: 6\n  }, {\n    cardsCount: 15,\n    gameDuration: 80,\n    reward: 7\n  }, {\n    cardsCount: 18,\n    gameDuration: 100,\n    reward: 8\n  }, {\n    cardsCount: 18,\n    gameDuration: 85,\n    reward: 9\n  }, {\n    cardsCount: 18,\n    gameDuration: 80,\n    reward: 10\n  }, {\n    cardsCount: 18,\n    gameDuration: 70,\n    reward: 15\n  }, {\n    cardsCount: 24,\n    gameDuration: 400,\n    reward: 20\n  }, {\n    cardsCount: 21,\n    gameDuration: 320,\n    reward: 25\n  }, {\n    cardsCount: 21,\n    gameDuration: 300,\n    reward: 30\n  }, {\n    cardsCount: 15,\n    gameDuration: 40,\n    reward: 35\n  }, {\n    cardsCount: 18,\n    gameDuration: 50,\n    reward: 40\n  }, {\n    cardsCount: 21,\n    gameDuration: 220,\n    reward: 45\n  }, {\n    cardsCount: 24,\n    gameDuration: 240,\n    reward: 50\n  }, {\n    cardsCount: 24,\n    gameDuration: 220,\n    reward: 60\n  }, {\n    cardsCount: 18,\n    gameDuration: 200,\n    reward: 75\n  }, {\n    cardsCount: 24,\n    gameDuration: 200,\n    reward: 80\n  }, {\n    cardsCount: 24,\n    gameDuration: 180,\n    reward: 85\n  }];\n  const getLevelConfig = levelNumber => {\n    // Adjust these values based on your game requirements\n    const level = levels[levelNumber];\n    if (!level) {\n      throw new Error(`Invalid level number: ${levelNumber}`);\n    }\n    const numberOfCards = level.cardsCount;\n    const coinReward = level.reward;\n    const timeLimit = level.gameDuration;\n    return {\n      levelNumber,\n      numberOfCards,\n      coinReward,\n      timeLimit\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(BackgroundProvider, {\n      children: /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n        clientId: \"YOUR_CLIENT_ID\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            children: [/*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n              onSuccess: credentialResponse => {\n                console.log(credentialResponse);\n                // Handle successful login, you may redirect user or set some state indicating logged in\n              },\n              onError: () => {\n                console.log('Login Failed');\n                // Handle login failure\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/levels\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Levels, {\n                levels: levels\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), [...Array(levels.length).keys()].map(levelNumber => /*#__PURE__*/_jsxDEV(Route, {\n            path: `/level/${levelNumber + 1}`,\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Game, {\n                levels: levels,\n                levelNumber: levelNumber + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this), \" \"]\n            }, void 0, true)\n          }, levelNumber + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/leaderboard\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Leaderboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/stats\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Stats, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/history\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","NavBar","Login","Game","Register","Profile","Leaderboard","Stats","BackgroundProvider","History","Levels","GoogleOAuthProvider","GoogleLogin","jsxDEV","_jsxDEV","Fragment","_Fragment","App","levels","cardsCount","gameDuration","reward","getLevelConfig","levelNumber","level","Error","numberOfCards","coinReward","timeLimit","children","clientId","path","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","credentialResponse","console","log","onError","element","Array","length","keys","map","_c","$RefreshReg$"],"sources":["C:/Users/krist/OneDrive/Desktop/windows-game-main/windows-game-main/src/App.js"],"sourcesContent":["// App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport NavBar from './Nav';\nimport Login from './Login';\nimport Game from './game';\nimport Register from './Register';\nimport Profile from './Profile';\nimport Leaderboard from './Leaderboards';\nimport Stats from './Stats';\nimport { BackgroundProvider } from './BackgroundContext';\nimport History from './History';\nimport Levels from './Level';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google'; // Import GoogleLogin component\n\nconst App = () => {\n  const levels = [\n    { cardsCount: 12, gameDuration: 120, reward: 3 },\n    { cardsCount: 12, gameDuration: 110, reward: 4 },\n    { cardsCount: 12, gameDuration: 90, reward: 5 },\n    { cardsCount: 15, gameDuration: 90, reward: 6 },\n    { cardsCount: 15, gameDuration: 80, reward: 7 },\n    { cardsCount: 18, gameDuration: 100, reward: 8 },\n    { cardsCount: 18, gameDuration: 85, reward: 9 },\n    { cardsCount: 18, gameDuration: 80, reward: 10 },\n    { cardsCount: 18, gameDuration: 70, reward: 15 },\n    { cardsCount: 24, gameDuration: 400, reward: 20},\n    { cardsCount: 21, gameDuration: 320, reward: 25 },\n    { cardsCount: 21, gameDuration: 300, reward: 30 },\n    { cardsCount: 15, gameDuration: 40, reward: 35 },\n    { cardsCount: 18, gameDuration: 50, reward: 40 },\n    { cardsCount: 21, gameDuration: 220, reward: 45 },\n    { cardsCount: 24, gameDuration: 240, reward: 50 },\n    { cardsCount: 24, gameDuration: 220, reward: 60 },\n    { cardsCount: 18, gameDuration: 200, reward: 75 },\n    { cardsCount: 24, gameDuration: 200, reward: 80 },\n    { cardsCount: 24, gameDuration: 180, reward: 85 },\n  ];\n\n\n  const getLevelConfig = (levelNumber) => {\n    // Adjust these values based on your game requirements\n    const level = levels[levelNumber];\n    if (!level) {\n      throw new Error(`Invalid level number: ${levelNumber}`);\n    }\n    const numberOfCards = level.cardsCount;\n    const coinReward = level.reward;\n    const timeLimit = level.gameDuration;\n  \n    return { levelNumber, numberOfCards, coinReward, timeLimit };\n  };\n  \n  \n  \n  \n\n  return (\n    <Router>\n      <BackgroundProvider>\n        <GoogleOAuthProvider clientId=\"YOUR_CLIENT_ID\">\n          <Routes>\n            <Route path=\"/login\">\n              <Login />\n              <GoogleLogin\n                onSuccess={credentialResponse => {\n                  console.log(credentialResponse);\n                  // Handle successful login, you may redirect user or set some state indicating logged in\n                }}\n                onError={() => {\n                  console.log('Login Failed');\n                  // Handle login failure\n                }}\n              />\n            </Route>\n            <Route path=\"/register\" element={<Register />} />\n            <Route\n              path=\"/levels\"\n              element={\n                <>\n                  <NavBar />\n                  <Levels levels={levels} />\n                </>\n              }\n            />\n            {[...Array(levels.length).keys()].map((levelNumber) => (\n              <Route\n                key={levelNumber + 1}\n                path={`/level/${levelNumber + 1}`}\n                element={\n                  <>\n                    <NavBar />\n                    <Game levels={levels} levelNumber={levelNumber + 1} /> {/* Pass levelNumber as a prop */}\n                  </>\n                }\n              />\n            ))}\n            <Route\n              path=\"/profile\"\n              element={\n                <>\n                  <NavBar />\n                  <Profile />\n                </>\n              }\n            />\n            <Route\n              path=\"/leaderboard\"\n              element={\n                <>\n                  <NavBar />\n                  <Leaderboard />\n                </>\n              }\n            />\n            <Route\n              path=\"/stats\"\n              element={\n                <>\n                  <NavBar />\n                  <Stats />\n                </>\n              }\n            />\n            <Route\n              path=\"/history\"\n              element={\n                <>\n                  <NavBar />\n                  <History />\n                </>\n              }\n            />\n          </Routes>\n        </GoogleOAuthProvider>\n      </BackgroundProvider>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}