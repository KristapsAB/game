{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\OneDrive\\\\Desktop\\\\windows-game-main\\\\windows-game-main\\\\src\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google'; // Import GoogleLogin component\nimport './style/styles.css'; // Adjust the file path based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loginStatus, setLoginStatus] = useState(null);\n  const handleLoginSuccess = userData => {\n    console.log('Login successful:', userData);\n\n    // Save user data in localStorage\n    localStorage.setItem('loggedInUser', JSON.stringify(userData));\n\n    // Redirect to the levels page\n    navigate('/levels');\n  };\n  const handleLoginFailure = error => {\n    console.error('Login failed:', error);\n    setLoginStatus({\n      success: false,\n      message: 'Error during login. Please try again later.'\n    });\n  };\n  const handleGoogleLoginSuccess = async credentialResponse => {\n    console.log('Google login successful:', credentialResponse);\n    try {\n      const response = await fetch('http://localhost/game/getUserId.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          credential: credentialResponse.credential\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      if (result.success) {\n        const userData = {\n          id: result.userId,\n          username: result.username,\n          email: result.email\n        };\n        handleLoginSuccess(userData);\n      } else {\n        handleLoginFailure(result.message);\n      }\n    } catch (error) {\n      handleLoginFailure(error.message);\n    }\n  };\n  const handleGoogleLoginError = error => {\n    console.error('Google login failed:', error);\n    handleLoginFailure('Google login failed.');\n  };\n  const handleRegister = () => {\n    // Redirect to the registration page\n    navigate('/register');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: \"301743701977-0jo8mmnfhqigsk8i1bpti9m6vv50rvgt.apps.googleusercontent.com\" // Replace with your Google OAuth client ID\n      ,\n      onSuccess: handleGoogleLoginSuccess,\n      onError: handleGoogleLoginError,\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), loginStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `login-message ${loginStatus.success ? 'success' : 'error'}`,\n      children: loginStatus.success ? 'Login successful' : loginStatus.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-link\",\n      children: [\"Not a user? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        onClick: handleRegister,\n        children: \"Register now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"H//GcnaT+oalqkkowuuNI+KXZOc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","GoogleLogin","jsxDEV","_jsxDEV","Login","_s","navigate","loginStatus","setLoginStatus","handleLoginSuccess","userData","console","log","localStorage","setItem","JSON","stringify","handleLoginFailure","error","success","message","handleGoogleLoginSuccess","credentialResponse","response","fetch","method","headers","body","credential","ok","Error","status","result","json","id","userId","username","email","handleGoogleLoginError","handleRegister","className","children","fileName","_jsxFileName","lineNumber","columnNumber","clientId","onSuccess","onError","href","onClick","_c","$RefreshReg$"],"sources":["C:/Users/krist/OneDrive/Desktop/windows-game-main/windows-game-main/src/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google'; // Import GoogleLogin component\nimport './style/styles.css'; // Adjust the file path based on your project structure\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [loginStatus, setLoginStatus] = useState(null);\n\n  const handleLoginSuccess = (userData) => {\n    console.log('Login successful:', userData);\n    \n    // Save user data in localStorage\n    localStorage.setItem('loggedInUser', JSON.stringify(userData));\n\n    // Redirect to the levels page\n    navigate('/levels');\n  };\n\n  const handleLoginFailure = (error) => {\n    console.error('Login failed:', error);\n\n    setLoginStatus({\n      success: false,\n      message: 'Error during login. Please try again later.',\n    });\n  };\n\n  const handleGoogleLoginSuccess = async (credentialResponse) => {\n    console.log('Google login successful:', credentialResponse);\n    \n    try {\n      const response = await fetch('http://localhost/game/getUserId.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ credential: credentialResponse.credential }),\n      });\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n  \n      const result = await response.json();\n  \n      if (result.success) {\n        const userData = {\n          id: result.userId,\n          username: result.username,\n          email: result.email,\n        };\n  \n        handleLoginSuccess(userData);\n      } else {\n        handleLoginFailure(result.message);\n      }\n    } catch (error) {\n      handleLoginFailure(error.message);\n    }\n  };\n\n  const handleGoogleLoginError = (error) => {\n    console.error('Google login failed:', error);\n    handleLoginFailure('Google login failed.');\n  };\n\n  const handleRegister = () => {\n    // Redirect to the registration page\n    navigate('/register');\n  };\n\n  return (\n    <div className=\"login-main\">\n      <h2>Login</h2>\n      <GoogleLogin\n        clientId=\"301743701977-0jo8mmnfhqigsk8i1bpti9m6vv50rvgt.apps.googleusercontent.com\" // Replace with your Google OAuth client ID\n        onSuccess={handleGoogleLoginSuccess}\n        onError={handleGoogleLoginError}\n      >\n        Login with Google\n      </GoogleLogin>\n\n      {loginStatus && (\n        <div className={`login-message ${loginStatus.success ? 'success' : 'error'}`}>\n          {loginStatus.success\n            ? 'Login successful'\n            : loginStatus.message}\n        </div>\n      )}\n\n      <div className=\"register-link\">\n        Not a user? <a href=\"/register\" onClick={handleRegister}>Register now</a>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}