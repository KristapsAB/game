{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/gameFinishedProduct-main/src/Leaderboards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './style/leaderboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leaderboard = () => {\n  _s();\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const [filteredLeaderboardData, setFilteredLeaderboardData] = useState([]);\n  const [selectedLevel, setSelectedLevel] = useState(''); // State to store selected level\n  const itemsPerPage = 5;\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    const fetchLeaderboardData = async () => {\n      try {\n        // Replace the URL with the actual URL of your PHP script\n        let url = 'http://localhost:8888/game/getLeaderboardData.php';\n\n        // Append selected level to URL if it's not empty\n        if (selectedLevel !== '') {\n          url += `?level=${selectedLevel}`;\n        }\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          mode: 'cors'\n        });\n        if (!response.ok) {\n          console.error(`HTTP error! Status: ${response.status}`);\n          console.log('Response text:', await response.text());\n          return;\n        }\n        const result = await response.json();\n        if (result.success) {\n          // Sort the leaderboard data by score in ascending order (from lowest to highest)\n          const sortedData = result.data.sort((a, b) => a.score - b.score);\n          setLeaderboardData(sortedData);\n          setFilteredLeaderboardData(sortedData);\n        } else {\n          console.error('Failed to fetch leaderboard data:', result.message);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchLeaderboardData();\n  }, [selectedLevel]);\n\n  // Function to filter leaderboard data by selected level\n  const filterLeaderboardByLevel = level => {\n    setSelectedLevel(level);\n    if (level === '') {\n      // If level is empty, display all leaderboard data\n      setFilteredLeaderboardData(leaderboardData);\n    } else {\n      // Otherwise, filter leaderboard data by selected level\n      const filteredData = leaderboardData.filter(entry => entry.level === level);\n      setFilteredLeaderboardData(filteredData);\n    }\n    setCurrentPage(1); // Reset current page to 1 when filtering\n  };\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const currentLeaderboardData = filteredLeaderboardData.slice(startIndex, endIndex);\n  const totalPages = Math.ceil(filteredLeaderboardData.length / itemsPerPage);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n\n  // Function to get rank icon based on rank\n  const getRankIcon = rank => {\n    if (rank === 1) {\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-trophy fa-2x trophy-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this); // Trophy icon for rank 1\n    } else if (rank === 2) {\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-trophy fa-2x silver-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this); // Medal icon for rank 2\n    } else if (rank === 3) {\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-trophy fa-2x bronze-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this); // Award icon for rank 3\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-trophy fa-2x red-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 14\n      }, this); // Default icon for other ranks\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => filterLeaderboardByLevel(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Levels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), Array.from({\n          length: 20\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i + 1,\n          children: [\"Level \", i + 1]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rank-container\",\n        children: currentLeaderboardData.length > 0 ? currentLeaderboardData.map((entry, localIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rank-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rank\",\n            children: [getRankIcon(startIndex + localIndex + 1), \" \", startIndex + localIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: entry.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score\",\n            children: entry.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)]\n        }, localIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-data\",\n          children: \"No data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), filteredLeaderboardData.length > itemsPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(currentPage - 1),\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(currentPage + 1),\n          disabled: currentPage === totalPages,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaderboard, \"Oc5KzyCrqD2CWkXRTAODaA0sJhg=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Leaderboard","_s","leaderboardData","setLeaderboardData","filteredLeaderboardData","setFilteredLeaderboardData","selectedLevel","setSelectedLevel","itemsPerPage","currentPage","setCurrentPage","fetchLeaderboardData","url","response","fetch","method","headers","credentials","mode","ok","console","error","status","log","text","result","json","success","sortedData","data","sort","a","b","score","message","filterLeaderboardByLevel","level","filteredData","filter","entry","startIndex","endIndex","currentLeaderboardData","slice","totalPages","Math","ceil","length","handlePageChange","page","getRankIcon","rank","className","fileName","_jsxFileName","lineNumber","columnNumber","children","onChange","e","target","value","Array","from","_","i","map","localIndex","username","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/gameFinishedProduct-main/src/Leaderboards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './style/leaderboard.css';\n\nconst Leaderboard = () => {\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const [filteredLeaderboardData, setFilteredLeaderboardData] = useState([]);\n  const [selectedLevel, setSelectedLevel] = useState(''); // State to store selected level\n  const itemsPerPage = 5;\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    const fetchLeaderboardData = async () => {\n      try {\n        // Replace the URL with the actual URL of your PHP script\n        let url = 'http://localhost:8888/game/getLeaderboardData.php';\n  \n        // Append selected level to URL if it's not empty\n        if (selectedLevel !== '') {\n          url += `?level=${selectedLevel}`;\n        }\n  \n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          credentials: 'include',\n          mode: 'cors',\n        });\n  \n        if (!response.ok) {\n          console.error(`HTTP error! Status: ${response.status}`);\n          console.log('Response text:', await response.text());\n          return;\n        }\n  \n        const result = await response.json();\n  \n        if (result.success) {\n          // Sort the leaderboard data by score in ascending order (from lowest to highest)\n          const sortedData = result.data.sort((a, b) => a.score - b.score);\n          setLeaderboardData(sortedData);\n          setFilteredLeaderboardData(sortedData);\n        } else {\n          console.error('Failed to fetch leaderboard data:', result.message);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n  \n    fetchLeaderboardData();\n  }, [selectedLevel]);\n  \n\n  // Function to filter leaderboard data by selected level\n  const filterLeaderboardByLevel = (level) => {\n    setSelectedLevel(level);\n    if (level === '') {\n      // If level is empty, display all leaderboard data\n      setFilteredLeaderboardData(leaderboardData);\n    } else {\n      // Otherwise, filter leaderboard data by selected level\n      const filteredData = leaderboardData.filter(entry => entry.level === level);\n      setFilteredLeaderboardData(filteredData);\n    }\n    setCurrentPage(1); // Reset current page to 1 when filtering\n  };\n\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const currentLeaderboardData = filteredLeaderboardData.slice(startIndex, endIndex);\n\n  const totalPages = Math.ceil(filteredLeaderboardData.length / itemsPerPage);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  // Function to get rank icon based on rank\n  const getRankIcon = (rank) => {\n    if (rank === 1) {\n      return <i className=\"fa fa-trophy fa-2x trophy-icon\"></i>; // Trophy icon for rank 1\n    } else if (rank === 2) {\n      return <i className=\"fa fa-trophy fa-2x silver-icon\"></i>; // Medal icon for rank 2\n    } else if (rank === 3) {\n      return <i className=\"fa fa-trophy fa-2x bronze-icon\"></i>; // Award icon for rank 3\n    } else {\n      return <i className=\"fa fa-trophy fa-2x red-icon\"></i>; // Default icon for other ranks\n    }\n  };\n\n  return (\n    <div className='leaderboard-container'>\n      <div className=\"leaderboard-main\">\n        <h2>Leaderboard</h2>\n        {/* Dropdown menu to select level for filtering */}\n        <select onChange={(e) => filterLeaderboardByLevel(e.target.value)}>\n          <option value=\"\">All Levels</option>\n          {Array.from({ length: 20 }, (_, i) => (\n            <option key={i} value={i + 1}>Level {i + 1}</option>\n          ))}\n        </select>\n        <div className='rank-container'>\n          {currentLeaderboardData.length > 0 ? (\n            currentLeaderboardData.map((entry, localIndex) => (\n              <div key={localIndex} className='rank-item'>\n                <div className='rank'>\n                  {getRankIcon(startIndex + localIndex + 1)} {startIndex + localIndex + 1}\n                </div>\n                <div className='username'>{entry.username}</div>\n                <div className='score'>{entry.score}</div>\n              </div>\n            ))\n          ) : (\n            <div className='no-data'>No data available</div>\n          )}\n        </div>\n\n        {filteredLeaderboardData.length > itemsPerPage && (\n          <div className=\"pagination\">\n            <button\n              onClick={() => handlePageChange(currentPage - 1)}\n              disabled={currentPage === 1}\n            >\n              Previous\n            </button>\n            <span>{currentPage}</span>\n            <button\n              onClick={() => handlePageChange(currentPage + 1)}\n              disabled={currentPage === totalPages}\n            >\n              Next\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Leaderboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}