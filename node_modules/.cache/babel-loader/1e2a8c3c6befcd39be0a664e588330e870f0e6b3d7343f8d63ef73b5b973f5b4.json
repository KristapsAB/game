{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/guess-game/guess/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './style/profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  // Fetch user ID from sessionStorage\n  const userId = sessionStorage.getItem('userId');\n\n  // State to store user data\n  const [userData, setUserData] = useState(null);\n\n  // State to manage edited data\n  const [editedData, setEditedData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8888/game/getUserProfile.php?id=${userId}`, {\n          method: 'GET',\n          credentials: 'omit'\n        });\n        if (!response.ok) {\n          console.error(`HTTP error! Status: ${response.status}`);\n          console.log('Response text:', await response.text());\n          return;\n        }\n        const resultText = await response.text();\n        console.log('Raw result text:', resultText); // Log raw result\n\n        try {\n          const result = JSON.parse(resultText);\n          if (result.success) {\n            setUserData(result.userData);\n            setEditedData({\n              username: result.userData.username,\n              email: result.userData.email,\n              password: '' // Don't show the password in the input field initially\n            });\n          } else {\n            console.error('Failed to fetch user data:', result.message);\n          }\n        } catch (jsonError) {\n          console.error('Error parsing JSON:', jsonError);\n          console.log('Raw result text:', resultText);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    if (userId) {\n      fetchUserData();\n    }\n  }, [userId]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedData({\n      ...editedData,\n      [name]: value\n    });\n  };\n  const handleSave = async () => {\n    try {\n      // Filter out empty values from editedData\n      const requestData = Object.fromEntries(Object.entries(editedData).filter(([key, value]) => value !== ''));\n      const response = await fetch(`http://localhost:8888/game/updateUserProfile.php?id=${userId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'omit',\n        body: JSON.stringify(requestData)\n      });\n      if (!response.ok) {\n        console.error(`HTTP error! Status: ${response.status}`);\n        console.log('Response text:', await response.text());\n        return;\n      }\n      const resultText = await response.text();\n      console.log('Raw result text:', resultText);\n      const result = JSON.parse(resultText);\n      if (result.success) {\n        setUserData(result.userData);\n        console.log('User data updated successfully');\n      } else {\n        console.error('Failed to update user data:', result.message);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: editedData.username,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: editedData.email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: editedData.password,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"oRXQK/qlG9wngfPwDC6e+JXqwKo=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Profile","_s","userId","sessionStorage","getItem","userData","setUserData","editedData","setEditedData","username","email","password","fetchUserData","response","fetch","method","credentials","ok","console","error","status","log","text","resultText","result","JSON","parse","success","message","jsonError","handleInputChange","e","name","value","target","handleSave","requestData","Object","fromEntries","entries","filter","key","headers","body","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/guess-game/guess/src/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './style/profile.css';\n\nconst Profile = () => {\n  // Fetch user ID from sessionStorage\n  const userId = sessionStorage.getItem('userId');\n\n  // State to store user data\n  const [userData, setUserData] = useState(null);\n\n  // State to manage edited data\n  const [editedData, setEditedData] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8888/game/getUserProfile.php?id=${userId}`, {\n          method: 'GET',\n          credentials: 'omit',\n        });\n\n        if (!response.ok) {\n          console.error(`HTTP error! Status: ${response.status}`);\n          console.log('Response text:', await response.text());\n          return;\n        }\n\n        const resultText = await response.text();\n        console.log('Raw result text:', resultText); // Log raw result\n\n        try {\n          const result = JSON.parse(resultText);\n          if (result.success) {\n            setUserData(result.userData);\n            setEditedData({\n              username: result.userData.username,\n              email: result.userData.email,\n              password: '', // Don't show the password in the input field initially\n            });\n          } else {\n            console.error('Failed to fetch user data:', result.message);\n          }\n        } catch (jsonError) {\n          console.error('Error parsing JSON:', jsonError);\n          console.log('Raw result text:', resultText);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n\n    if (userId) {\n      fetchUserData();\n    }\n  }, [userId]);\n\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setEditedData({\n      ...editedData,\n      [name]: value,\n    });\n  };\n\n  const handleSave = async () => {\n    try {\n      // Filter out empty values from editedData\n      const requestData = Object.fromEntries(\n        Object.entries(editedData).filter(([key, value]) => value !== '')\n      );\n  \n      const response = await fetch(`http://localhost:8888/game/updateUserProfile.php?id=${userId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'omit',\n        body: JSON.stringify(requestData),\n      });\n  \n      if (!response.ok) {\n        console.error(`HTTP error! Status: ${response.status}`);\n        console.log('Response text:', await response.text());\n        return;\n      }\n  \n      const resultText = await response.text();\n      console.log('Raw result text:', resultText);\n  \n      const result = JSON.parse(resultText);\n  \n      if (result.success) {\n        setUserData(result.userData);\n        console.log('User data updated successfully');\n      } else {\n        console.error('Failed to update user data:', result.message);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  \n  \n\n  if (!userData) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-main\">\n        <label>Username</label>\n        <input type=\"text\" name=\"username\" value={editedData.username} onChange={handleInputChange} />\n\n        <label>Email</label>\n        <input type=\"text\" name=\"email\" value={editedData.email} onChange={handleInputChange} />\n\n        <label>Password</label>\n        <input type=\"password\" name=\"password\" value={editedData.password} onChange={handleInputChange} />\n\n        <button onClick={handleSave}>Save</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}