{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/guess-game/guess/src/game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './style/game.css'; // Adjust the file path based on your project structure\nimport hearts from './image/heart.png';\nimport heart164 from './image/sirds.png';\nimport spade from './image/spade.png';\nimport diamond from './image/diamond.png';\nimport diamondSide from './image/diamond-side.png';\nimport Clubs from './image/clubs.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [cards, setCards] = useState([{\n    id: 1,\n    text: 'A',\n    sideImg: heart164,\n    customText: 'A',\n    isFlipped: false\n  }, {\n    id: 2,\n    text: 'A',\n    sideImg: heart164,\n    customText: 'A',\n    isFlipped: false\n  }, {\n    id: 3,\n    text: 'A',\n    sideImg: heart164,\n    customText: 'A',\n    isFlipped: false\n  }, {\n    id: 4,\n    text: 'A',\n    sideImg: spade,\n    customText: 'A',\n    isFlipped: false\n  }, {\n    id: 5,\n    text: 'A',\n    sideImg: spade,\n    customText: 'A',\n    isFlipped: false\n  }, {\n    id: 6,\n    text: 'A',\n    sideImg: spade,\n    customText: 'A',\n    isFlipped: false\n  }, {\n    id: 7,\n    text: 'A',\n    sideImg: diamondSide,\n    customText: 'A',\n    isFlipped: false\n  }, {\n    id: 8,\n    text: 'A',\n    sideImg: diamondSide,\n    customText: 'A',\n    isFlipped: false\n  }, {\n    id: 9,\n    text: 'A',\n    sideImg: diamondSide,\n    customText: 'A',\n    isFlipped: false\n  }, {\n    id: 10,\n    text: 'A',\n    sideImg: Clubs,\n    customText: 'A',\n    isFlipped: false\n  }, {\n    id: 11,\n    text: 'A',\n    sideImg: Clubs,\n    customText: 'A',\n    isFlipped: false\n  }, {\n    id: 12,\n    text: 'A',\n    sideImg: Clubs,\n    customText: 'A',\n    isFlipped: false\n  }]);\n  useEffect(() => {\n    setCards(cards => shuffleArray(cards));\n  }, []);\n  function shuffleArray(array) {\n    const shuffledArray = array.slice(); // Create a copy of the array to avoid mutating the original array\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  }\n  const handleCardClick = id => {\n    setCards(prevCards => prevCards.map(card => {\n      if (card.id === id) {\n        const suitIcons = {\n          'hearts': heart164,\n          'spade': spade,\n          'diamond': diamondSide,\n          'Clubs': Clubs\n        };\n        return {\n          ...card,\n          isFlipped: !card.isFlipped,\n          sideImg: suitIcons[card.text.toLowerCase()]\n        };\n      } else {\n        return card;\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"HINT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-container\",\n        children: \"02:69\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"GIVE UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card1 ${(card.id === 4 || card.id === 5 || card.id === 6) && card.isFlipped ? 'rotate-text bottom-right' : ''}`,\n        onClick: () => handleCardClick(card.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card-text ${card.isFlipped ? 'card-text-second' : 'card-text-back'}`,\n          children: card.isFlipped ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [card.text, /*#__PURE__*/_jsxDEV(\"img\", {\n              src: card.sideImg,\n              alt: \"Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : '?'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heart-icon\",\n          children: card.isFlipped && (card.id === 4 || card.id === 5 || card.id === 6) ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"bottom-right-image\",\n            src: card.sideImg,\n            alt: \"Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card-text-first ${card.isFlipped && (card.id === 4 || card.id === 5 || card.id === 6) ? 'rotate-text' : ''}`,\n          children: card.isFlipped ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [card.id === 4 || card.id === 5 || card.id === 6 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"special-text\",\n              children: card.customText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this) : card.customText, /*#__PURE__*/_jsxDEV(\"img\", {\n              className: `bottom-right-image ${card.id === 4 || card.id === 5 || card.id === 6 ? 'bottom-right-custom' : ''}`,\n              src: card.sideImg,\n              alt: \"Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, card.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"CbNT/HXwfd+Py6wEDLCsS+SSgGo=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","hearts","heart164","spade","diamond","diamondSide","Clubs","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","cards","setCards","id","text","sideImg","customText","isFlipped","shuffleArray","array","shuffledArray","slice","i","length","j","Math","floor","random","handleCardClick","prevCards","map","card","suitIcons","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/guess-game/guess/src/game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './style/game.css'; // Adjust the file path based on your project structure\nimport hearts from './image/heart.png';\nimport heart164 from './image/sirds.png';\nimport spade from './image/spade.png';\nimport diamond from './image/diamond.png';\nimport diamondSide from './image/diamond-side.png';\nimport Clubs from './image/clubs.png';\n\nconst Game = () => {\n  const [cards, setCards] = useState([\n    { id: 1, text: 'A', sideImg: heart164, customText: 'A', isFlipped: false },\n    { id: 2, text: 'A', sideImg: heart164, customText: 'A', isFlipped: false },\n    { id: 3, text: 'A', sideImg: heart164, customText: 'A', isFlipped: false },\n    { id: 4, text: 'A', sideImg: spade, customText: 'A', isFlipped: false },\n    { id: 5, text: 'A', sideImg: spade, customText: 'A', isFlipped: false },\n    { id: 6, text: 'A', sideImg: spade, customText: 'A', isFlipped: false },\n    { id: 7, text: 'A', sideImg: diamondSide, customText: 'A', isFlipped: false },\n    { id: 8, text: 'A', sideImg: diamondSide, customText: 'A', isFlipped: false },\n    { id: 9, text: 'A', sideImg: diamondSide, customText: 'A', isFlipped: false },\n    { id: 10, text: 'A', sideImg: Clubs, customText: 'A', isFlipped: false },\n    { id: 11, text: 'A', sideImg: Clubs, customText: 'A', isFlipped: false },\n    { id: 12, text: 'A', sideImg: Clubs, customText: 'A', isFlipped: false },\n  ]);\n\n  useEffect(() => {\n    setCards((cards) => shuffleArray(cards));\n  }, []);\n\n  function shuffleArray(array) {\n    const shuffledArray = array.slice(); // Create a copy of the array to avoid mutating the original array\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  }\n\n  const handleCardClick = (id) => {\n    setCards((prevCards) =>\n      prevCards.map((card) => {\n        if (card.id === id) {\n          const suitIcons = {\n            'hearts': heart164,\n            'spade': spade,\n            'diamond': diamondSide,\n            'Clubs': Clubs,\n          };\n          return {\n            ...card,\n            isFlipped: !card.isFlipped,\n            sideImg: suitIcons[card.text.toLowerCase()],\n          };\n        } else {\n          return card;\n        }\n      })\n    );\n  };\n\n  return (\n    <div className=\"game-main\">\n      <div className=\"game-buttons\">\n        <button>HINT</button>\n        <div className=\"timer-container\">02:69</div>\n        <button>GIVE UP</button>\n      </div>\n      <div className=\"card-container\">\n        {cards.map((card) => (\n          <div\n            className={`card1 ${\n              (card.id === 4 || card.id === 5 || card.id === 6) && card.isFlipped\n                ? 'rotate-text bottom-right'\n                : ''\n            }`}\n            key={card.id}\n            onClick={() => handleCardClick(card.id)}\n          >\n            <div className={`card-text ${card.isFlipped ? 'card-text-second' : 'card-text-back'}`}>\n              {card.isFlipped ? (\n                <>\n                  {card.text}\n                  <img src={card.sideImg} alt=\"Icon\" />\n                </>\n              ) : (\n                '?'\n              )}\n            </div>\n            <div className=\"heart-icon\">\n              {card.isFlipped && (card.id === 4 || card.id === 5 || card.id === 6) ? (\n                <img\n                  className=\"bottom-right-image\"\n                  src={card.sideImg}\n                  alt=\"Icon\"\n                />\n              ) : null}\n            </div>\n            <div\n              className={`card-text-first ${card.isFlipped && (card.id === 4 || card.id === 5 || card.id === 6)\n                ? 'rotate-text'\n                : ''}`}\n            >\n              {card.isFlipped ? (\n                <>\n                  {card.id === 4 || card.id === 5 || card.id === 6 ? (\n                    <p className=\"special-text\">{card.customText}</p>\n                  ) : (\n                    card.customText\n                  )}\n                  <img\n                    className={`bottom-right-image ${\n                      card.id === 4 || card.id === 5 || card.id === 6 ? 'bottom-right-custom' : ''\n                    }`}\n                    src={card.sideImg}\n                    alt=\"Icon\"\n                  />\n                </>\n              ) : null}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}