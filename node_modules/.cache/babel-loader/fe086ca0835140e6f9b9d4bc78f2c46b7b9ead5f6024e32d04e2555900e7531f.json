{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\OneDrive\\\\Desktop\\\\windows-game-main\\\\windows-game-main\\\\src\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './style/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginStatus, setLoginStatus] = useState(null);\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleLogin = async () => {\n    try {\n      // Simulating login with email and password (replace with actual login logic)\n      // For demonstration purpose, let's assume login is successful\n      const userData = {\n        userId: 123,\n        username: 'exampleUser',\n        email: email\n      };\n\n      // Save user data in localStorage upon successful login\n      localStorage.setItem('loggedInUser', JSON.stringify(userData));\n      sessionStorage.setItem('userId', userData.userId);\n      localStorage.setItem('isLoggedIn', 'true');\n\n      // Redirect to the levels page\n      navigate('/levels');\n    } catch (error) {\n      console.error('Error during login:', error);\n      setLoginStatus({\n        success: false,\n        message: 'Error during login. Please try again later.'\n      });\n    }\n  };\n  const handleGoogleLoginSuccess = async credentialResponse => {\n    console.log('Google login successful:', credentialResponse);\n    try {\n      // Simulating Google login success (replace with actual Google login logic)\n      const username = generateRandomUsername();\n      const userData = {\n        userId: 123,\n        username: username,\n        email: 'example@example.com'\n      };\n\n      // Save user data in localStorage upon successful login\n      localStorage.setItem('loggedInUser', JSON.stringify(userData));\n      sessionStorage.setItem('userId', userData.userId);\n      localStorage.setItem('isLoggedIn', 'true');\n\n      // Redirect to the levels page\n      navigate('/levels');\n    } catch (error) {\n      console.error('Error during Google login:', error);\n      setLoginStatus({\n        success: false,\n        message: 'Error during Google login. Please try again later.'\n      });\n    }\n  };\n  const handleGoogleLoginError = () => {\n    console.error('Google login failed');\n    setLoginStatus({\n      success: false,\n      message: 'Google login failed. Please try again.'\n    });\n  };\n  const handleRegister = () => {\n    // Redirect to the registration page\n    navigate('/register');\n  };\n  useEffect(() => {\n    const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\n    if (loggedInUser) {\n      console.log('Logged in user:', loggedInUser);\n    }\n  }, []);\n  const generateRandomUsername = () => {\n    const adjectives = ['Happy', 'Funny', 'Clever', 'Smart', 'Creative'];\n    const nouns = ['Cat', 'Dog', 'Rabbit', 'Tiger', 'Elephant'];\n    const randomAdjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n    const randomNoun = nouns[Math.floor(Math.random() * nouns.length)];\n    return `${randomAdjective}${randomNoun}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: handleEmailChange,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: handlePasswordChange,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"google-login\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoogleLoginSuccess,\n        children: \"Login with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), loginStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `login-message ${loginStatus.success ? 'success' : 'error'}`,\n      children: loginStatus.success ? 'Login successful' : loginStatus.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-link\",\n      children: [\"Not a user? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        onClick: handleRegister,\n        children: \"Register now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"VYFgJLUMSGeXXWjPQmmI1WvvolA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","loginStatus","setLoginStatus","handleEmailChange","e","target","value","handlePasswordChange","handleLogin","userData","userId","username","localStorage","setItem","JSON","stringify","sessionStorage","error","console","success","message","handleGoogleLoginSuccess","credentialResponse","log","generateRandomUsername","handleGoogleLoginError","handleRegister","loggedInUser","parse","getItem","adjectives","nouns","randomAdjective","Math","floor","random","length","randomNoun","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/krist/OneDrive/Desktop/windows-game-main/windows-game-main/src/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './style/styles.css';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginStatus, setLoginStatus] = useState(null);\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = async () => {\n    try {\n      // Simulating login with email and password (replace with actual login logic)\n      // For demonstration purpose, let's assume login is successful\n      const userData = {\n        userId: 123,\n        username: 'exampleUser',\n        email: email,\n      };\n\n      // Save user data in localStorage upon successful login\n      localStorage.setItem('loggedInUser', JSON.stringify(userData));\n      sessionStorage.setItem('userId', userData.userId);\n      localStorage.setItem('isLoggedIn', 'true');\n\n      // Redirect to the levels page\n      navigate('/levels');\n    } catch (error) {\n      console.error('Error during login:', error);\n      setLoginStatus({\n        success: false,\n        message: 'Error during login. Please try again later.',\n      });\n    }\n  };\n\n  const handleGoogleLoginSuccess = async (credentialResponse) => {\n    console.log('Google login successful:', credentialResponse);\n\n    try {\n      // Simulating Google login success (replace with actual Google login logic)\n      const username = generateRandomUsername();\n      const userData = {\n        userId: 123,\n        username: username,\n        email: 'example@example.com',\n      };\n\n      // Save user data in localStorage upon successful login\n      localStorage.setItem('loggedInUser', JSON.stringify(userData));\n      sessionStorage.setItem('userId', userData.userId);\n      localStorage.setItem('isLoggedIn', 'true');\n\n      // Redirect to the levels page\n      navigate('/levels');\n    } catch (error) {\n      console.error('Error during Google login:', error);\n      setLoginStatus({\n        success: false,\n        message: 'Error during Google login. Please try again later.',\n      });\n    }\n  };\n\n  const handleGoogleLoginError = () => {\n    console.error('Google login failed');\n    setLoginStatus({\n      success: false,\n      message: 'Google login failed. Please try again.',\n    });\n  };\n\n  const handleRegister = () => {\n    // Redirect to the registration page\n    navigate('/register');\n  };\n\n  useEffect(() => {\n    const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\n    if (loggedInUser) {\n      console.log('Logged in user:', loggedInUser);\n    }\n  }, []);\n\n  const generateRandomUsername = () => {\n    const adjectives = ['Happy', 'Funny', 'Clever', 'Smart', 'Creative'];\n    const nouns = ['Cat', 'Dog', 'Rabbit', 'Tiger', 'Elephant'];\n    const randomAdjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n    const randomNoun = nouns[Math.floor(Math.random() * nouns.length)];\n    return `${randomAdjective}${randomNoun}`;\n  };\n\n  return (\n    <div className=\"login-main\">\n      <h2>Login</h2>\n      <form>\n        <input type=\"email\" value={email} onChange={handleEmailChange} placeholder=\"Email\" />\n        <br />\n        <input type=\"password\" value={password} onChange={handlePasswordChange} placeholder=\"Password\" />\n        <br />\n        <div className=\"button\">\n          <button type=\"button\" onClick={handleLogin}>\n            Login\n          </button>\n        </div>\n      </form>\n\n      <div className=\"google-login\">\n        {/* Google login component */}\n        <button onClick={handleGoogleLoginSuccess}>Login with Google</button>\n      </div>\n\n      {loginStatus && (\n        <div className={`login-message ${loginStatus.success ? 'success' : 'error'}`}>\n          {loginStatus.success\n            ? 'Login successful'\n            : loginStatus.message}\n        </div>\n      )}\n\n      <div className=\"register-link\">\n        Not a user? <a href=\"/register\" onClick={handleRegister}>Register now</a>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}